{
	"name": "vehiclesPerHouseholdData",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "RenameColumns"
				},
				{
					"name": "AddDerivedColumns"
				},
				{
					"name": "FilterValidData"
				},
				{
					"name": "AggregateData"
				},
				{
					"name": "AggregateVehicleCounts"
				},
				{
					"name": "CalculatePercentages"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ResponseId as string,",
				"          EndDate as string,",
				"          ED_MODEL_CODE as string,",
				"          ED_MODEL_YEAR as string,",
				"          {1711-1712} as string,",
				"          Q4601 as string,",
				"          Q4531 as string,",
				"          Q4609 as string,",
				"          Q5386 as string,",
				"          Q2002 as string,",
				"          Q2012 as string,",
				"          {1701} as integer,",
				"          {1721} as integer,",
				"          {1731-1732} as integer,",
				"          V1021 as string,",
				"          {1950} as integer,",
				"          {670} as string,",
				"          {671g_1_1_1} as string,",
				"          {671g_1_1_3} as string,",
				"          {671g_1_1_5} as string,",
				"          {711} as string,",
				"          {713g_1_1} as string,",
				"          {713g_1_3} as string,",
				"          {713g_1_5} as string,",
				"          {1961g_1_1_1} as string,",
				"          {1961g_1_1_3} as string,",
				"          {1961g_1_1_5} as string,",
				"          {3931g_3931} as string,",
				"          {3931g_3932} as string,",
				"          {3931g_3933} as string,",
				"          {3931g_3934} as string,",
				"          {3931g_3935} as string,",
				"          {3931g_3936} as string,",
				"          {3931g_3937} as string,",
				"          {3931g_3938} as string,",
				"          {3931g_3939} as string,",
				"          {3931g_3940} as string,",
				"          {3931g_3941} as string,",
				"          {1961g_2_1_1} as string,",
				"          {1961g_3_1_1} as string,",
				"          ED_AUTH_GROUP as string,",
				"          {3881g_38813883} as string,",
				"          {2674-2675} as string,",
				"          {1909-1910} as string,",
				"          Market as string,",
				"          Description as string,",
				"          Type as string,",
				"          Model_Row as string,",
				"          Derivate as string,",
				"          NBOSegment as string,",
				"          Drive as string,",
				"          Body as string,",
				"          PerformanceLevel as string,",
				"          TypeSOP as string,",
				"          TypeEOP as string,",
				"          Top as string,",
				"          Classic as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          ResponseId,",
				"          EndDate,",
				"          ED_MODEL_CODE,",
				"          ED_MODEL_YEAR,",
				"          Q1711_1712 = {1711-1712},",
				"          Q4601,",
				"          Q4531,",
				"          Q4609,",
				"          Q5386,",
				"          Q2002,",
				"          Q2012,",
				"          Q1701 = {1701},",
				"          Q1721 = {1721},",
				"          {1731-1732},",
				"          V1021,",
				"          Q1950 = {1950},",
				"          {670},",
				"          {671g_1_1_1},",
				"          {671g_1_1_3},",
				"          {671g_1_1_5},",
				"          {711},",
				"          {713g_1_1},",
				"          {713g_1_3},",
				"          {713g_1_5},",
				"          {1961g_1_1_1},",
				"          {1961g_1_1_3},",
				"          {1961g_1_1_5},",
				"          {3931g_3931},",
				"          {3931g_3932},",
				"          {3931g_3933},",
				"          {3931g_3934},",
				"          {3931g_3935},",
				"          {3931g_3936},",
				"          {3931g_3937},",
				"          {3931g_3938},",
				"          {3931g_3939},",
				"          {3931g_3940},",
				"          {3931g_3941},",
				"          {1961g_2_1_1},",
				"          {1961g_3_1_1},",
				"          ED_AUTH_GROUP,",
				"          {3881g_38813883},",
				"          {2674-2675},",
				"          {1909-1910},",
				"          Market,",
				"          Description,",
				"          Type,",
				"          Model_Row,",
				"          Derivate,",
				"          NBOSegment,",
				"          Drive,",
				"          Body,",
				"          PerformanceLevel,",
				"          TypeSOP,",
				"          TypeEOP,",
				"          Top,",
				"          Classic",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RenameColumns",
				"RenameColumns derive(ModelGroup = iif(isNull(Derivate) || Derivate == '', ",
				"                     Model_Row, ",
				"                     iif(startsWith(Derivate, Model_Row), ",
				"                         Derivate, ",
				"                         Model_Row + ' ' + Derivate)),",
				"          Year = left(EndDate, 4),",
				"          Gender = iif({Q1701} == 1, 'male', 'female'),",
				"          VehicleCount = case(",
				"        Q1950 == 1, 'vehicle1',",
				"        Q1950 == 2, 'vehicle2',",
				"        Q1950 == 3, 'vehicle3',",
				"        Q1950 == 4, 'vehicle4',",
				"        Q1950 == 5, 'vehicle5',",
				"        Q1950 == 6, 'vehicle6',",
				"        'vehicleMoreThan6'",
				"    )) ~> AddDerivedColumns",
				"AddDerivedColumns filter(!isNull(Market) &&",
				"    Market != '' &&",
				"    !isNull(Year) &&",
				"    Year != '' &&",
				"    !isNull(ModelGroup) &&",
				"    ModelGroup != '' &&",
				"    Market != 'PCNA' &&",
				"    !isNull(Q1950)) ~> FilterValidData",
				"FilterValidData aggregate(groupBy(Market,",
				"          Year,",
				"          ModelGroup,",
				"          Gender,",
				"          VehicleCount),",
				"     count = count()) ~> AggregateData",
				"AggregateData aggregate(groupBy(Market,",
				"          Year,",
				"          ModelGroup,",
				"          Gender),",
				"     totalCount = count(),",
				"          vehicle1 = countIf(VehicleCount == 'vehicle1'),",
				"          vehicle2 = countIf(VehicleCount == 'vehicle2'),",
				"          vehicle3 = countIf(VehicleCount == 'vehicle3'),",
				"          vehicle4 = countIf(VehicleCount == 'vehicle4'),",
				"          vehicle5 = countIf(VehicleCount == 'vehicle5'),",
				"          vehicle6 = countIf(VehicleCount == 'vehicle6'),",
				"          vehicleMoreThan6 = countIf(VehicleCount == 'vehicleMoreThan6')) ~> AggregateVehicleCounts",
				"AggregateVehicleCounts derive(vehicle1 = round(toDouble(vehicle1) / toDouble(totalCount), 2),",
				"          vehicle2 = round(toDouble(vehicle2) / toDouble(totalCount), 2),",
				"          vehicle3 = round(toDouble(vehicle3) / toDouble(totalCount), 2),",
				"          vehicle4 = round(toDouble(vehicle4) / toDouble(totalCount), 2),",
				"          vehicle5 = round(toDouble(vehicle5) / toDouble(totalCount), 2),",
				"          vehicle6 = round(toDouble(vehicle6) / toDouble(totalCount), 2),",
				"          vehicleMoreThan6 = round(toDouble(vehicleMoreThan6) / toDouble(totalCount), 2)) ~> CalculatePercentages"
			]
		}
	}
}