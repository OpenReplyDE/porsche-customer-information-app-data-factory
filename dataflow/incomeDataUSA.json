{
	"name": "incomeData",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "FullData",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "RenameColumns"
				},
				{
					"name": "addDerivedColumns"
				},
				{
					"name": "filterValidData"
				},
				{
					"name": "aggregateData"
				},
				{
					"name": "groupIncomes"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ResponseId as string,",
				"          EndDate as string,",
				"          ED_MODEL_CODE as string,",
				"          ED_MODEL_YEAR as string,",
				"          {1711-1712} as string,",
				"          Q4601 as integer,",
				"          Q4531 as string,",
				"          Q4609 as string,",
				"          Q5386 as string,",
				"          Q2002 as integer,",
				"          Q2012 as string,",
				"          {170111} as integer,",
				"          {1721} as integer,",
				"          {1731-1732} as string,",
				"          V1021 as string,",
				"          {1950} as string,",
				"          {670} as string,",
				"          {671g_1_1_1} as string,",
				"          {671g_1_1_3} as string,",
				"          {671g_1_1_5} as string,",
				"          {711} as integer,",
				"          {713g_1_121} as string,",
				"          {713g_1_3} as string,",
				"          {713g_1_5} as string,",
				"          {1961g_1_1_1} as string,",
				"          {1961g_1_1_3} as string,",
				"          {1961g_1_1_5} as string,",
				"          {3931g_3931} as string,",
				"          {3931g_3932} as string,",
				"          {3931g_3933} as string,",
				"          {3931g_3934} as string,",
				"          {3931g_3935} as string,",
				"          {3931g_3936} as string,",
				"          {3931g_3937} as string,",
				"          {3931g_3938} as string,",
				"          {3931g_3939} as string,",
				"          {3931g_3940} as string,",
				"          {3931g_3941} as string,",
				"          {1961g_2_1_1} as string,",
				"          {1961g_3_1_1} as string,",
				"          ED_AUTH_GROUP as string,",
				"          {3881g_38813883} as string,",
				"          {2674-2675} as string,",
				"          {1909-1910} as integer,",
				"          Market as string,",
				"          Description as string,",
				"          Type as string,",
				"          Model_Row as string,",
				"          Derivate as string,",
				"          NBOSegment as string,",
				"          Drive as string,",
				"          Body as string,",
				"          PerformanceLevel as string,",
				"          TypeSOP as string,",
				"          TypeEOP as string,",
				"          Top as string,",
				"          Classic as string,",
				"          {170157} as string,",
				"          {1903-1904} as integer,",
				"          {1923-1924} as integer,",
				"          {2601-2602} as string,",
				"          {2702-2703} as string,",
				"          {3881g_38843886} as string,",
				"          {3881g_38873889} as string,",
				"          {3881g_38903892} as string,",
				"          {3881g_38933895} as string,",
				"          {3881g_38963898} as string,",
				"          {2051g_1001} as string,",
				"          {2051g_30168} as string,",
				"          {2051g_30269} as string,",
				"          {2051g_101} as string,",
				"          {2063} as string,",
				"          {2051g_901} as string,",
				"          {2051g_90273} as string,",
				"          {2051g_406} as string,",
				"          {2051g_30375} as string,",
				"          {2051g_60276} as string,",
				"          {2072} as string,",
				"          {2073} as string,",
				"          {2051g_604} as string,",
				"          {2075} as string,",
				"          {2051g_90381} as string,",
				"          {2051g_904} as string,",
				"          {2051g_50183} as string,",
				"          {2051g_41584} as string,",
				"          {208285} as string,",
				"          {2083} as string,",
				"          {208487} as string,",
				"          {209088} as string,",
				"          {209289} as string,",
				"          {2093} as string,",
				"          {2096} as string,",
				"          {2051g_1003} as string,",
				"          {2051g_50393} as string,",
				"          {210294} as string,",
				"          {2051g_1004} as string,",
				"          {2110} as string,",
				"          {211197} as string,",
				"          {211498} as string,",
				"          {2115} as string,",
				"          {2051g_413} as string,",
				"          {2117} as string,",
				"          {2051g_414102} as string,",
				"          {2119} as string,",
				"          {2051g_309104} as string,",
				"          {2122105} as string,",
				"          {2124} as string,",
				"          {2051g_611} as string,",
				"          {2128} as string,",
				"          {2129} as string,",
				"          {2051g_419110} as string,",
				"          {2051g_1006} as string,",
				"          {2051g_804112} as string,",
				"          {2051g_805} as string,",
				"          {2051g_803} as string,",
				"          {2136} as string,",
				"          {2138116} as string,",
				"          {2141} as string,",
				"          {2142} as string,",
				"          {2051g_703} as string,",
				"          {2051g_1002} as string,",
				"          {2145} as string,",
				"          {2146} as string,",
				"          {2147} as string,",
				"          {2154} as string,",
				"          {2051g_301125} as string,",
				"          {2051g_403} as string,",
				"          {2051g_404} as string,",
				"          {2051g_302128} as string,",
				"          {2051g_102} as string,",
				"          {2102130} as string,",
				"          {2051g_103} as string,",
				"          {2051g_902132} as string,",
				"          {2051g_303133} as string,",
				"          {2051g_602134} as string,",
				"          {2051g_304} as string,",
				"          {2090136} as string,",
				"          {2053} as string,",
				"          {2051g_903138} as string,",
				"          {2135} as string,",
				"          {2092140} as string,",
				"          {2080} as string,",
				"          {2082142} as string,",
				"          {2084143} as string,",
				"          {2087} as string,",
				"          {2088} as string,",
				"          {2091} as string,",
				"          {2051g_503147} as string,",
				"          {2100} as string,",
				"          {2101} as string,",
				"          {2104} as string,",
				"          {2105} as string,",
				"          {2106} as string,",
				"          {2111153} as string,",
				"          {2114154} as string,",
				"          {2051g_502} as string,",
				"          {2051g_414156} as string,",
				"          {2051g_309157} as string,",
				"          {2120} as string,",
				"          {2051g_415159} as string,",
				"          {2122160} as string,",
				"          {2051g_310} as string,",
				"          {2051g_419162} as string,",
				"          {2051g_804163} as string,",
				"          {2054} as string,",
				"          {2051g_501165} as string,",
				"          {2051g_504} as string,",
				"          {2051g_416} as string,",
				"          {2051g_417} as string,",
				"          {2138169} as string,",
				"          {2051g_1102_TEXT} as string,",
				"          Q4970 as string,",
				"          {2051g_1101} as string,",
				"          {713g_1_4} as string,",
				"          {713g_1_1174} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          ResponseId,",
				"          EndDate,",
				"          ED_MODEL_CODE,",
				"          ED_MODEL_YEAR,",
				"          Q1711_1712 = {1711-1712},",
				"          Q4601,",
				"          Q4531,",
				"          Q4609,",
				"          Q5386,",
				"          Q2002,",
				"          Q2012,",
				"          Q1701 = {170111},",
				"          Q1721 = {1721},",
				"          {1731-1732},",
				"          V1021,",
				"          {1950},",
				"          {670},",
				"          {671g_1_1_1},",
				"          {671g_1_1_3},",
				"          {671g_1_1_5},",
				"          Q711 = {711},",
				"          {713g_1_1} = {713g_1_121},",
				"          {713g_1_3},",
				"          {713g_1_5},",
				"          {1961g_1_1_1},",
				"          {1961g_1_1_3},",
				"          {1961g_1_1_5},",
				"          {3931g_3931},",
				"          {3931g_3932},",
				"          {3931g_3933},",
				"          {3931g_3934},",
				"          {3931g_3935},",
				"          {3931g_3936},",
				"          {3931g_3937},",
				"          {3931g_3938},",
				"          {3931g_3939},",
				"          {3931g_3940},",
				"          {3931g_3941},",
				"          {1961g_2_1_1},",
				"          {1961g_3_1_1},",
				"          ED_AUTH_GROUP,",
				"          {3881g_38813883},",
				"          {2674-2675},",
				"          {1909-1910},",
				"          Market,",
				"          Description,",
				"          Type,",
				"          Model_Row,",
				"          Derivate,",
				"          NBOSegment,",
				"          Drive,",
				"          Body,",
				"          {1903-1904},",
				"          TypeSOP,",
				"          TypeEOP,",
				"          Top,",
				"          Classic",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RenameColumns",
				"RenameColumns derive(Year = left(EndDate, 4),",
				"          ModelGroup = iif(isNull(Derivate) || Derivate == '' || Derivate == Model_Row, ",
				"                 Model_Row + ' Basic', ",
				"                 iif(startsWith(Derivate, Model_Row), ",
				"                    Derivate, ",
				"                    Model_Row + ' ' + Derivate)),",
				"          BaseModel = trim(split(Model_Row, ' ')[1]),",
				"          IncomeGroup = case(",
				"        Market == 'PCNA', case(",
				"            Q4601 == 1, 'below5K',",
				"            Q4601 == 2 || Q4601 == 3, 'between5And10K',",
				"            Q4601 == 4 || Q4601 == 5, 'between10And15K',",
				"            Q4601 == 6 || Q4601 == 7, 'between15And20K',",
				"            Q4601 == 8 || Q4601 == 9, 'between20And25K',",
				"            Q4601 == 10 || Q4601 == 11 || Q4601 == 12 || Q4601 == 13, 'moreThan25K',",
				"            Q4601 == 98, 'preferNotToAnswer',",
				"            'unknown'",
				"        ),",
				"        Market == 'PGCN', case(",
				"            {1909-1910} == 1, 'below1M',",
				"            {1909-1910} == 2 || {1909-1910} == 3, 'between1MAnd3M',",
				"            {1909-1910} == 4 || {1909-1910} == 5, 'between3MAnd5M',",
				"            {1909-1910} == 6 || {1909-1910} == 7, 'between5MAnd7M',",
				"            {1909-1910} == 8 || {1909-1910} == 9, 'between7MAnd9M',",
				"            {1909-1910} == 10 || {1909-1910} == 11, 'moreThan9M',",
				"            {1909-1910} == 0, 'dontKnow',",
				"            'unknown'",
				"        ),",
				"        Market == 'PD', case(",
				"            {1903-1904} == 1, 'below5K',",
				"            {1903-1904} == 2, 'between5KAnd10K',",
				"            {1903-1904} == 3, 'between10KAnd15K',",
				"            {1903-1904} == 4, 'between15KAnd20K',",
				"            {1903-1904} == 5, 'between20KAnd25K',",
				"            {1903-1904} == 6, 'moreThan25K',",
				"            {1903-1904} == 0, 'noAnswer',",
				"            'unknown'",
				"        ),",
				"        Market == 'PCGB', case(",
				"            {1903-1904} == 1, 'below40K',",
				"            {1903-1904} == 2, 'between40KAnd50K',",
				"            {1903-1904} == 3, 'between50KAnd60K',",
				"            {1903-1904} == 4, 'between60KAnd70K',",
				"            {1903-1904} == 5, 'between70KAnd100K',",
				"            {1903-1904} == 6 || {1903-1904} == 7, 'between100KAnd200K',",
				"            {1903-1904} == 8, 'between200KAnd500K',",
				"            {1903-1904} == 9, 'between500KAnd1M',",
				"            {1903-1904} == 10, 'moreThan1M',",
				"            {1903-1904} == 0, 'preferNotToAnswer',",
				"            'unknown'",
				"        ),",
				"        'unknown'",
				"    ),",
				"          MappedMarket = case(",
				"       Market == 'PGCN', 'CN',",
				"       Market == 'PCGB', 'UK',",
				"       Market == 'PCNA', 'US',",
				"       Market == 'PD', 'DE',",
				"       Market",
				"    )) ~> addDerivedColumns",
				"addDerivedColumns filter(!isNull(MappedMarket) &&",
				"    MappedMarket != '' &&",
				"    !isNull(Year) &&",
				"    Year != '' &&",
				"    !isNull(ModelGroup) &&",
				"    ModelGroup != '' &&",
				"    !isNull(Q1701) &&",
				"    !isNull(IncomeGroup) &&",
				"    IncomeGroup != 'unknown') ~> filterValidData",
				"filterValidData aggregate(groupBy(MappedMarket,",
				"          Year,",
				"          ModelGroup,",
				"          Q1701,",
				"          IncomeGroup),",
				"     count = count()) ~> aggregateData",
				"aggregateData aggregate(groupBy(MappedMarket,",
				"          Year,",
				"          ModelGroup,",
				"          Q1701),",
				"     total = sum(count),",
				"          incomeGroups = collect(@(IncomeGroup=IncomeGroup, count=count))) ~> groupIncomes"
			]
		}
	}
}