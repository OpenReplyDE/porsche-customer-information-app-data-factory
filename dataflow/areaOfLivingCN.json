{
	"name": "areaOfLivingCN",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CAP_CN_2019",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "CAP_CN_2020",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "CAP_CN_2021",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "CAP_CN_2022",
						"type": "DatasetReference"
					},
					"name": "source4"
				},
				{
					"dataset": {
						"referenceName": "CAP_CN_2023",
						"type": "DatasetReference"
					},
					"name": "source5"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "SplitModelTypes"
				},
				{
					"name": "SplitModelTypes2"
				},
				{
					"name": "SplitModelTypes3"
				},
				{
					"name": "SplitModelTypes4"
				},
				{
					"name": "SplitModelTypes5"
				},
				{
					"name": "DeriveGenderColumns"
				},
				{
					"name": "DeriveGenderColumns2"
				},
				{
					"name": "DeriveGenderColumns3"
				},
				{
					"name": "DeriveGenderColumns4"
				},
				{
					"name": "DeriveGenderColumns5"
				},
				{
					"name": "DeriveEngineColumns"
				},
				{
					"name": "DeriveEngineColumns2"
				},
				{
					"name": "DeriveEngineColumns3"
				},
				{
					"name": "DeriveEngineColumns4"
				},
				{
					"name": "DeriveEngineColumns5"
				},
				{
					"name": "SelectGenderColumns"
				},
				{
					"name": "SelectGenderColumns2"
				},
				{
					"name": "SelectGenderColumns3"
				},
				{
					"name": "SelectGenderColumns4"
				},
				{
					"name": "SelectGenderColumns5"
				},
				{
					"name": "SelectEngineColumns"
				},
				{
					"name": "SelectEngineColumns2"
				},
				{
					"name": "SelectEngineColumns3"
				},
				{
					"name": "SelectEngineColumns4"
				},
				{
					"name": "SelectEngineColumns5"
				},
				{
					"name": "DeriveGenderKeys"
				},
				{
					"name": "DeriveGenderKeys2"
				},
				{
					"name": "DeriveGenderKeys3"
				},
				{
					"name": "DeriveGenderKeys4"
				},
				{
					"name": "DeriveGenderKeys5"
				},
				{
					"name": "DeriveEngineKeys"
				},
				{
					"name": "DeriveEngineKeys2"
				},
				{
					"name": "DeriveEngineKeys3"
				},
				{
					"name": "DeriveEngineKeys4"
				},
				{
					"name": "DeriveEngineKeys5"
				},
				{
					"name": "SelectVillageGender"
				},
				{
					"name": "SelectVillageGender2"
				},
				{
					"name": "SelectVillageGender3"
				},
				{
					"name": "SelectVillageGender4"
				},
				{
					"name": "SelectVillageGender5"
				},
				{
					"name": "SelectSuburbsGender"
				},
				{
					"name": "SelectSuburbsGender2"
				},
				{
					"name": "SelectSuburbsGender3"
				},
				{
					"name": "SelectSuburbsGender4"
				},
				{
					"name": "SelectSuburbsGender5"
				},
				{
					"name": "SelectTownGender"
				},
				{
					"name": "SelectTownGender2"
				},
				{
					"name": "SelectTownGender3"
				},
				{
					"name": "SelectTownGender4"
				},
				{
					"name": "SelectTownGender5"
				},
				{
					"name": "SelectCityGender"
				},
				{
					"name": "SelectCityGender2"
				},
				{
					"name": "SelectCityGender3"
				},
				{
					"name": "SelectCityGender4"
				},
				{
					"name": "SelectCityGender5"
				},
				{
					"name": "SelectVillageEngine"
				},
				{
					"name": "SelectVillageEngine2"
				},
				{
					"name": "SelectVillageEngine3"
				},
				{
					"name": "SelectVillageEngine4"
				},
				{
					"name": "SelectVillageEngine5"
				},
				{
					"name": "SelectSuburbsEngine"
				},
				{
					"name": "SelectSuburbsEngine2"
				},
				{
					"name": "SelectSuburbsEngine3"
				},
				{
					"name": "SelectSuburbsEngine4"
				},
				{
					"name": "SelectSuburbsEngine5"
				},
				{
					"name": "SelectTownEngine"
				},
				{
					"name": "SelectTownEngine2"
				},
				{
					"name": "SelectTownEngine3"
				},
				{
					"name": "SelectTownEngine4"
				},
				{
					"name": "SelectTownEngine5"
				},
				{
					"name": "SelectCityEngine"
				},
				{
					"name": "SelectCityEngine2"
				},
				{
					"name": "SelectCityEngine3"
				},
				{
					"name": "SelectCityEngine4"
				},
				{
					"name": "SelectCityEngine5"
				},
				{
					"name": "UnionGenderData"
				},
				{
					"name": "UnionEngineData"
				}
			],
			"scriptLines": [
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          T4 as double,",
				"          T3 as double,",
				"          T2 as double,",
				"          T1 as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          T4 as double,",
				"          T3 as double,",
				"          T2 as double,",
				"          T1 as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          T4 as double,",
				"          T3 as double,",
				"          T2 as double,",
				"          T1 as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source3",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          T4 as double,",
				"          T3 as double,",
				"          T2 as double,",
				"          T1 as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source4",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          T4 as double,",
				"          T3 as double,",
				"          T2 as double,",
				"          T1 as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source5",
				"source1 split(GroupType == 'Model/Gender',",
				"     GroupType == 'Model/Engine',",
				"     disjoint: false) ~> SplitModelTypes@(ModelGender, ModelEngine)",
				"source2 split(GroupType == 'Model/Gender',",
				"     GroupType == 'Model/Engine',",
				"     disjoint: false) ~> SplitModelTypes2@(ModelGender, ModelEngine)",
				"source3 split(GroupType == 'Model/Gender',",
				"     GroupType == 'Model/Engine',",
				"     disjoint: false) ~> SplitModelTypes3@(ModelGender, ModelEngine)",
				"source4 split(GroupType == 'Model/Gender',",
				"     GroupType == 'Model/Engine',",
				"     disjoint: false) ~> SplitModelTypes4@(ModelGender, ModelEngine)",
				"source5 split(GroupType == 'Model/Gender',",
				"     GroupType == 'Model/Engine',",
				"     disjoint: false) ~> SplitModelTypes5@(ModelGender, ModelEngine)",
				"SplitModelTypes@ModelGender derive(market = 'CN',",
				"          year = '2019',",
				"          variant = 'All',",
				"          model = iif(GroupName == 'Porsche/Female' || GroupName == 'Porsche/Male', 'All Models',",
				"             iif(startsWith(split(GroupName, '/')[1], '7') || startsWith(split(GroupName, '/')[1], '9'),",
				"                concat('_', split(GroupName, '/')[1]),",
				"                split(GroupName, '/')[1])),",
				"          gender = iif(endsWith(GroupName, '/Female'), 'female', 'male')) ~> DeriveGenderColumns",
				"SplitModelTypes2@ModelGender derive(market = 'CN',",
				"          year = '2020',",
				"          variant = 'All',",
				"          model = iif(GroupName == 'Porsche/Female' || GroupName == 'Porsche/Male', 'All Models',",
				"             iif(startsWith(split(GroupName, '/')[1], '7') || startsWith(split(GroupName, '/')[1], '9'),",
				"                concat('_', split(GroupName, '/')[1]),",
				"                split(GroupName, '/')[1])),",
				"          gender = iif(endsWith(GroupName, '/Female'), 'female', 'male')) ~> DeriveGenderColumns2",
				"SplitModelTypes3@ModelGender derive(market = 'CN',",
				"          year = '2021',",
				"          variant = 'All',",
				"          model = iif(GroupName == 'Porsche/Female' || GroupName == 'Porsche/Male', 'All Models',",
				"             iif(startsWith(split(GroupName, '/')[1], '7') || startsWith(split(GroupName, '/')[1], '9'),",
				"                concat('_', split(GroupName, '/')[1]),",
				"                split(GroupName, '/')[1])),",
				"          gender = iif(endsWith(GroupName, '/Female'), 'female', 'male')) ~> DeriveGenderColumns3",
				"SplitModelTypes4@ModelGender derive(market = 'CN',",
				"          year = '2022',",
				"          variant = 'All',",
				"          model = iif(GroupName == 'Porsche/Female' || GroupName == 'Porsche/Male', 'All Models',",
				"             iif(startsWith(split(GroupName, '/')[1], '7') || startsWith(split(GroupName, '/')[1], '9'),",
				"                concat('_', split(GroupName, '/')[1]),",
				"                split(GroupName, '/')[1])),",
				"          gender = iif(endsWith(GroupName, '/Female'), 'female', 'male')) ~> DeriveGenderColumns4",
				"SplitModelTypes5@ModelGender derive(market = 'CN',",
				"          year = '2023',",
				"          variant = 'All',",
				"          model = iif(GroupName == 'Porsche/Female' || GroupName == 'Porsche/Male', 'All Models',",
				"             iif(startsWith(split(GroupName, '/')[1], '7') || startsWith(split(GroupName, '/')[1], '9'),",
				"                concat('_', split(GroupName, '/')[1]),",
				"                split(GroupName, '/')[1])),",
				"          gender = iif(endsWith(GroupName, '/Female'), 'female', 'male')) ~> DeriveGenderColumns5",
				"SplitModelTypes@ModelEngine derive(market = 'CN',",
				"          year = '2019',",
				"          variant = trim(split(GroupName, '/')[2]),",
				"          model = iif(startsWith(split(GroupName, '/')[1], '7') || startsWith(split(GroupName, '/')[1], '9'),",
				"        concat('_', split(GroupName, '/')[1]),",
				"        split(GroupName, '/')[1])) ~> DeriveEngineColumns",
				"SplitModelTypes2@ModelEngine derive(market = 'CN',",
				"          year = '2020',",
				"          variant = trim(split(GroupName, '/')[2]),",
				"          model = iif(startsWith(split(GroupName, '/')[1], '7') || startsWith(split(GroupName, '/')[1], '9'),",
				"        concat('_', split(GroupName, '/')[1]),",
				"        split(GroupName, '/')[1])) ~> DeriveEngineColumns2",
				"SplitModelTypes3@ModelEngine derive(market = 'CN',",
				"          year = '2021',",
				"          variant = trim(split(GroupName, '/')[2]),",
				"          model = iif(startsWith(split(GroupName, '/')[1], '7') || startsWith(split(GroupName, '/')[1], '9'),",
				"        concat('_', split(GroupName, '/')[1]),",
				"        split(GroupName, '/')[1])) ~> DeriveEngineColumns3",
				"SplitModelTypes4@ModelEngine derive(market = 'CN',",
				"          year = '2022',",
				"          variant = trim(split(GroupName, '/')[2]),",
				"          model = iif(startsWith(split(GroupName, '/')[1], '7') || startsWith(split(GroupName, '/')[1], '9'),",
				"        concat('_', split(GroupName, '/')[1]),",
				"        split(GroupName, '/')[1])) ~> DeriveEngineColumns4",
				"SplitModelTypes5@ModelEngine derive(market = 'CN',",
				"          year = '2023',",
				"          variant = trim(split(GroupName, '/')[2]),",
				"          model = iif(startsWith(split(GroupName, '/')[1], '7') || startsWith(split(GroupName, '/')[1], '9'),",
				"        concat('_', split(GroupName, '/')[1]),",
				"        split(GroupName, '/')[1])) ~> DeriveEngineColumns5",
				"DeriveGenderColumns select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          Village = T4,",
				"          Suburbs = T3,",
				"          Town = T2,",
				"          City = T1",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectGenderColumns",
				"DeriveGenderColumns2 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          Village = T4,",
				"          Suburbs = T3,",
				"          Town = T2,",
				"          City = T1",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectGenderColumns2",
				"DeriveGenderColumns3 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          Village = T4,",
				"          Suburbs = T3,",
				"          Town = T2,",
				"          City = T1",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectGenderColumns3",
				"DeriveGenderColumns4 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          Village = T4,",
				"          Suburbs = T3,",
				"          Town = T2,",
				"          City = T1",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectGenderColumns4",
				"DeriveGenderColumns5 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          Village = T4,",
				"          Suburbs = T3,",
				"          Town = T2,",
				"          City = T1",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectGenderColumns5",
				"DeriveEngineColumns select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          Village = T4,",
				"          Suburbs = T3,",
				"          Town = T2,",
				"          City = T1",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectEngineColumns",
				"DeriveEngineColumns2 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          Village = T4,",
				"          Suburbs = T3,",
				"          Town = T2,",
				"          City = T1",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectEngineColumns2",
				"DeriveEngineColumns3 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          Village = T4,",
				"          Suburbs = T3,",
				"          Town = T2,",
				"          City = T1",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectEngineColumns3",
				"DeriveEngineColumns4 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          Village = T4,",
				"          Suburbs = T3,",
				"          Town = T2,",
				"          City = T1",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectEngineColumns4",
				"DeriveEngineColumns5 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          Village = T4,",
				"          Suburbs = T3,",
				"          Town = T2,",
				"          City = T1",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectEngineColumns5",
				"SelectGenderColumns derive(Village_key = 'Village',",
				"          Village_value = Village,",
				"          Suburbs_key = 'Suburbs',",
				"          Suburbs_value = Suburbs,",
				"          Town_key = 'Town',",
				"          Town_value = Town,",
				"          City_key = 'City',",
				"          City_value = City) ~> DeriveGenderKeys",
				"SelectGenderColumns2 derive(Village_key = 'Village',",
				"          Village_value = Village,",
				"          Suburbs_key = 'Suburbs',",
				"          Suburbs_value = Suburbs,",
				"          Town_key = 'Town',",
				"          Town_value = Town,",
				"          City_key = 'City',",
				"          City_value = City) ~> DeriveGenderKeys2",
				"SelectGenderColumns3 derive(Village_key = 'Village',",
				"          Village_value = Village,",
				"          Suburbs_key = 'Suburbs',",
				"          Suburbs_value = Suburbs,",
				"          Town_key = 'Town',",
				"          Town_value = Town,",
				"          City_key = 'City',",
				"          City_value = City) ~> DeriveGenderKeys3",
				"SelectGenderColumns4 derive(Village_key = 'Village',",
				"          Village_value = Village,",
				"          Suburbs_key = 'Suburbs',",
				"          Suburbs_value = Suburbs,",
				"          Town_key = 'Town',",
				"          Town_value = Town,",
				"          City_key = 'City',",
				"          City_value = City) ~> DeriveGenderKeys4",
				"SelectGenderColumns5 derive(Village_key = 'Village',",
				"          Village_value = Village,",
				"          Suburbs_key = 'Suburbs',",
				"          Suburbs_value = Suburbs,",
				"          Town_key = 'Town',",
				"          Town_value = Town,",
				"          City_key = 'City',",
				"          City_value = City) ~> DeriveGenderKeys5",
				"SelectEngineColumns derive(Village_key = 'Village',",
				"          Village_value = Village,",
				"          Suburbs_key = 'Suburbs',",
				"          Suburbs_value = Suburbs,",
				"          Town_key = 'Town',",
				"          Town_value = Town,",
				"          City_key = 'City',",
				"          City_value = City) ~> DeriveEngineKeys",
				"SelectEngineColumns2 derive(Village_key = 'Village',",
				"          Village_value = Village,",
				"          Suburbs_key = 'Suburbs',",
				"          Suburbs_value = Suburbs,",
				"          Town_key = 'Town',",
				"          Town_value = Town,",
				"          City_key = 'City',",
				"          City_value = City) ~> DeriveEngineKeys2",
				"SelectEngineColumns3 derive(Village_key = 'Village',",
				"          Village_value = Village,",
				"          Suburbs_key = 'Suburbs',",
				"          Suburbs_value = Suburbs,",
				"          Town_key = 'Town',",
				"          Town_value = Town,",
				"          City_key = 'City',",
				"          City_value = City) ~> DeriveEngineKeys3",
				"SelectEngineColumns4 derive(Village_key = 'Village',",
				"          Village_value = Village,",
				"          Suburbs_key = 'Suburbs',",
				"          Suburbs_value = Suburbs,",
				"          Town_key = 'Town',",
				"          Town_value = Town,",
				"          City_key = 'City',",
				"          City_value = City) ~> DeriveEngineKeys4",
				"SelectEngineColumns5 derive(Village_key = 'Village',",
				"          Village_value = Village,",
				"          Suburbs_key = 'Suburbs',",
				"          Suburbs_value = Suburbs,",
				"          Town_key = 'Town',",
				"          Town_value = Town,",
				"          City_key = 'City',",
				"          City_value = City) ~> DeriveEngineKeys5",
				"DeriveGenderKeys select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = Village_key,",
				"          value = Village_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectVillageGender",
				"DeriveGenderKeys2 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = Village_key,",
				"          value = Village_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectVillageGender2",
				"DeriveGenderKeys3 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = Village_key,",
				"          value = Village_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectVillageGender3",
				"DeriveGenderKeys4 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = Village_key,",
				"          value = Village_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectVillageGender4",
				"DeriveGenderKeys5 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = Village_key,",
				"          value = Village_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectVillageGender5",
				"DeriveGenderKeys select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = Suburbs_key,",
				"          value = Suburbs_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectSuburbsGender",
				" select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = Suburbs_key,",
				"          value = Suburbs_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectSuburbsGender2",
				"DeriveGenderKeys3 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = Suburbs_key,",
				"          value = Suburbs_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectSuburbsGender3",
				"DeriveGenderKeys4 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = Suburbs_key,",
				"          value = Suburbs_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectSuburbsGender4",
				"DeriveGenderKeys5 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = Suburbs_key,",
				"          value = Suburbs_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectSuburbsGender5",
				"DeriveGenderKeys select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = Town_key,",
				"          value = Town_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectTownGender",
				"DeriveGenderKeys2 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = Town_key,",
				"          value = Town_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectTownGender2",
				"DeriveGenderKeys3 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = Town_key,",
				"          value = Town_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectTownGender3",
				"DeriveGenderKeys4 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = Town_key,",
				"          value = Town_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectTownGender4",
				"DeriveGenderKeys5 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = Town_key,",
				"          value = Town_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectTownGender5",
				"DeriveGenderKeys select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = City_key,",
				"          value = City_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectCityGender",
				"DeriveGenderKeys2 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = City_key,",
				"          value = City_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectCityGender2",
				"DeriveGenderKeys3 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = City_key,",
				"          value = City_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectCityGender3",
				"DeriveGenderKeys4 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = City_key,",
				"          value = City_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectCityGender4",
				"DeriveGenderKeys5 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          gender,",
				"          key = City_key,",
				"          value = City_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectCityGender5",
				"DeriveEngineKeys select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = Village_key,",
				"          value = Village_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectVillageEngine",
				"DeriveEngineKeys2 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = Village_key,",
				"          value = Village_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectVillageEngine2",
				"DeriveEngineKeys3 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = Village_key,",
				"          value = Village_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectVillageEngine3",
				"DeriveEngineKeys4 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = Village_key,",
				"          value = Village_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectVillageEngine4",
				"DeriveEngineKeys5 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = Village_key,",
				"          value = Village_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectVillageEngine5",
				"DeriveEngineKeys select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = Suburbs_key,",
				"          value = Suburbs_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectSuburbsEngine",
				"DeriveEngineKeys2 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = Suburbs_key,",
				"          value = Suburbs_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectSuburbsEngine2",
				"DeriveEngineKeys3 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = Suburbs_key,",
				"          value = Suburbs_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectSuburbsEngine3",
				"DeriveEngineKeys4 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = Suburbs_key,",
				"          value = Suburbs_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectSuburbsEngine4",
				"DeriveEngineKeys5 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = Suburbs_key,",
				"          value = Suburbs_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectSuburbsEngine5",
				"DeriveEngineKeys select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = Town_key,",
				"          value = Town_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectTownEngine",
				"DeriveEngineKeys2 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = Town_key,",
				"          value = Town_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectTownEngine2",
				"DeriveEngineKeys3 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = Town_key,",
				"          value = Town_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectTownEngine3",
				"DeriveEngineKeys4 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = Town_key,",
				"          value = Town_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectTownEngine4",
				"DeriveEngineKeys5 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = Town_key,",
				"          value = Town_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectTownEngine5",
				"DeriveEngineKeys select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = City_key,",
				"          value = City_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectCityEngine",
				"DeriveEngineKeys2 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = City_key,",
				"          value = City_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectCityEngine2",
				"DeriveEngineKeys3 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = City_key,",
				"          value = City_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectCityEngine3",
				"DeriveEngineKeys4 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = City_key,",
				"          value = City_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectCityEngine4",
				"DeriveEngineKeys5 select(mapColumn(",
				"          market,",
				"          year,",
				"          variant,",
				"          model,",
				"          key = City_key,",
				"          value = City_value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectCityEngine5",
				"SelectVillageGender, SelectVillageGender2, SelectVillageGender3, SelectVillageGender4, SelectVillageGender5, SelectSuburbsGender, SelectSuburbsGender2, SelectSuburbsGender3, SelectSuburbsGender4, SelectSuburbsGender5, SelectTownGender, SelectTownGender2, SelectTownGender3, SelectTownGender4, SelectTownGender5, SelectCityGender, SelectCityGender2, SelectCityGender3, SelectCityGender4, SelectCityGender5 union(byName: true)~> UnionGenderData",
				"SelectVillageEngine, SelectSuburbsEngine, SelectTownEngine, SelectCityEngine union(byName: true)~> UnionEngineData",
				" sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     preCommands: [],",
				"     postCommands: []) ~> sink1"
			]
		}
	}
}