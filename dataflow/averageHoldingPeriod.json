{
	"name": "averageHoldingPeriod",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CAP_DE_2019",
						"type": "DatasetReference"
					},
					"name": "sourceDE2019"
				},
				{
					"dataset": {
						"referenceName": "CAP_CN_2019",
						"type": "DatasetReference"
					},
					"name": "sourceCN2019"
				},
				{
					"dataset": {
						"referenceName": "CAP_UK_2019",
						"type": "DatasetReference"
					},
					"name": "sourceUK2019"
				},
				{
					"dataset": {
						"referenceName": "CAP_US_2019",
						"type": "DatasetReference"
					},
					"name": "sourceUS2019"
				},
				{
					"dataset": {
						"referenceName": "CAP_DE_2020",
						"type": "DatasetReference"
					},
					"name": "sourceDE2020"
				},
				{
					"dataset": {
						"referenceName": "CAP_CN_2020",
						"type": "DatasetReference"
					},
					"name": "sourceCN2020"
				},
				{
					"dataset": {
						"referenceName": "CAP_UK_2020",
						"type": "DatasetReference"
					},
					"name": "sourceUK2020"
				},
				{
					"dataset": {
						"referenceName": "CAP_US_2020",
						"type": "DatasetReference"
					},
					"name": "sourceUS2020"
				},
				{
					"dataset": {
						"referenceName": "CAP_DE_2021",
						"type": "DatasetReference"
					},
					"name": "sourceDE2021"
				},
				{
					"dataset": {
						"referenceName": "CAP_CN_2021",
						"type": "DatasetReference"
					},
					"name": "sourceCN2021"
				},
				{
					"dataset": {
						"referenceName": "CAP_UK_2021",
						"type": "DatasetReference"
					},
					"name": "sourceUK2021"
				},
				{
					"dataset": {
						"referenceName": "CAP_US_2021",
						"type": "DatasetReference"
					},
					"name": "sourceUS2021"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flowletDE2019",
					"flowlet": {
						"referenceName": "averageHoldingPeriodSource",
						"type": "DataFlowReference",
						"parameters": {
							"market": "'DE'",
							"year": "'2019'"
						}
					}
				},
				{
					"name": "flowletCN2019",
					"flowlet": {
						"referenceName": "averageHoldingPeriodSource",
						"type": "DataFlowReference",
						"parameters": {
							"market": "'CN'",
							"year": "'2019'"
						}
					}
				},
				{
					"name": "flowletUK2019",
					"flowlet": {
						"referenceName": "averageHoldingPeriodSource",
						"type": "DataFlowReference",
						"parameters": {
							"market": "'UK'",
							"year": "'2019'"
						}
					}
				},
				{
					"name": "flowletUS2019",
					"flowlet": {
						"referenceName": "averageHoldingPeriodSource",
						"type": "DataFlowReference",
						"parameters": {
							"market": "'US'",
							"year": "'2019'"
						}
					}
				},
				{
					"name": "flowletDE2020",
					"flowlet": {
						"referenceName": "averageHoldingPeriodSource",
						"type": "DataFlowReference",
						"parameters": {
							"market": "'DE'",
							"year": "'2020'"
						}
					}
				},
				{
					"name": "flowletCN2020",
					"flowlet": {
						"referenceName": "averageHoldingPeriodSource",
						"type": "DataFlowReference",
						"parameters": {
							"market": "'CN'",
							"year": "'2020'"
						}
					}
				},
				{
					"name": "flowletUK2020",
					"flowlet": {
						"referenceName": "averageHoldingPeriodSource",
						"type": "DataFlowReference",
						"parameters": {
							"market": "'UK'",
							"year": "'2020'"
						}
					}
				},
				{
					"name": "flowletUS2020",
					"flowlet": {
						"referenceName": "averageHoldingPeriodSource",
						"type": "DataFlowReference",
						"parameters": {
							"market": "'US'",
							"year": "'2020'"
						}
					}
				},
				{
					"name": "UnionAllData"
				},
				{
					"name": "CreateDataArray"
				},
				{
					"name": "AggregateToArray"
				},
				{
					"name": "SelectDataArray"
				},
				{
					"name": "flowletDE2021",
					"flowlet": {
						"referenceName": "averageHoldingPeriodSource",
						"type": "DataFlowReference",
						"parameters": {
							"market": "'DE'",
							"year": "'2021'"
						}
					}
				},
				{
					"name": "flowletCN2021",
					"flowlet": {
						"referenceName": "averageHoldingPeriodSource",
						"type": "DataFlowReference",
						"parameters": {
							"market": "'CN'",
							"year": "'2021'"
						}
					}
				},
				{
					"name": "flowletUK2021",
					"flowlet": {
						"referenceName": "averageHoldingPeriodSource",
						"type": "DataFlowReference",
						"parameters": {
							"market": "'UK'",
							"year": "'2021'"
						}
					}
				},
				{
					"name": "flowletUS2021",
					"flowlet": {
						"referenceName": "averageHoldingPeriodSource",
						"type": "DataFlowReference",
						"parameters": {
							"market": "'US'",
							"year": "'2021'"
						}
					}
				}
			],
			"scriptLines": [
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          MeanKmPerYear as double,",
				"          {kmPerYear=0} as double,",
				"          {kmPerYear=500} as double,",
				"          {kmPerYear=1000} as double,",
				"          {kmPerYear=1500} as double,",
				"          {kmPerYear=2000} as double,",
				"          {kmPerYear=2500} as double,",
				"          {kmPerYear=3000} as double,",
				"          {kmPerYear=3500} as double,",
				"          {kmPerYear=4000} as double,",
				"          {kmPerYear=4500} as double,",
				"          {kmPerYear=5000} as double,",
				"          {kmPerYear=5500} as double,",
				"          {kmPerYear=6000} as double,",
				"          {kmPerYear=6500} as double,",
				"          {kmPerYear=7000} as double,",
				"          {kmPerYear=7500} as double,",
				"          {kmPerYear=8000} as double,",
				"          {kmPerYear=8500} as double,",
				"          {kmPerYear=9000} as double,",
				"          {kmPerYear=9500} as double,",
				"          {kmPerYear=10000} as double,",
				"          {kmPerYear=10500} as double,",
				"          {kmPerYear=11000} as double,",
				"          {kmPerYear=11500} as double,",
				"          {kmPerYear=12000} as double,",
				"          {kmPerYear=12500} as double,",
				"          {kmPerYear=13000} as double,",
				"          {kmPerYear=13500} as double,",
				"          {kmPerYear=14000} as double,",
				"          {kmPerYear=14500} as double,",
				"          {kmPerYear=15000} as double,",
				"          {kmPerYear=15500} as double,",
				"          {kmPerYear=16000} as double,",
				"          {kmPerYear=16500} as double,",
				"          {kmPerYear=17000} as double,",
				"          {kmPerYear=17500} as double,",
				"          {kmPerYear=18000} as double,",
				"          {kmPerYear=18500} as double,",
				"          {kmPerYear=19000} as double,",
				"          {kmPerYear=19500} as double,",
				"          {kmPerYear=20000} as double,",
				"          {kmPerYear=20500} as double,",
				"          {kmPerYear=21000} as double,",
				"          {kmPerYear=21500} as double,",
				"          {kmPerYear=22000} as double,",
				"          {kmPerYear=22500} as double,",
				"          {kmPerYear=23000} as double,",
				"          {kmPerYear=23500} as double,",
				"          {kmPerYear=24000} as double,",
				"          {kmPerYear=24500} as double,",
				"          {kmPerYear=25000} as double,",
				"          {kmPerYear=25500} as double,",
				"          {kmPerYear=26000} as double,",
				"          {kmPerYear=26500} as double,",
				"          {kmPerYear=27000} as double,",
				"          {kmPerYear=27500} as double,",
				"          {kmPerYear=28000} as double,",
				"          {kmPerYear=28500} as double,",
				"          {kmPerYear=29000} as double,",
				"          {kmPerYear=29500} as double,",
				"          {kmPerYear=30000} as double,",
				"          {kmPerYear=30500} as double,",
				"          {kmPerYear=31000} as double,",
				"          {kmPerYear=31500} as double,",
				"          {kmPerYear=32000} as double,",
				"          {kmPerYear=32500} as double,",
				"          {kmPerYear=33000} as double,",
				"          {kmPerYear=33500} as double,",
				"          {kmPerYear=34000} as double,",
				"          {kmPerYear=34500} as double,",
				"          {kmPerYear=35000} as double,",
				"          {kmPerYear=35500} as double,",
				"          {kmPerYear=36000} as double,",
				"          {kmPerYear=36500} as double,",
				"          {kmPerYear=37000} as double,",
				"          {kmPerYear=37500} as double,",
				"          {kmPerYear=38000} as double,",
				"          {kmPerYear=38500} as double,",
				"          {kmPerYear=39000} as double,",
				"          {kmPerYear=39500} as double,",
				"          {kmPerYear=40000} as double,",
				"          {kmPerYear=40500} as double,",
				"          {kmPerYear=41000} as double,",
				"          {kmPerYear=41500} as double,",
				"          {kmPerYear=42000} as double,",
				"          {kmPerYear=42500} as double,",
				"          {kmPerYear=43000} as double,",
				"          {kmPerYear=43500} as double,",
				"          {kmPerYear=44000} as double,",
				"          {kmPerYear=44500} as double,",
				"          {kmPerYear=45000} as double,",
				"          {kmPerYear=45500} as double,",
				"          {kmPerYear=46000} as double,",
				"          {kmPerYear=46500} as double,",
				"          {kmPerYear=47000} as double,",
				"          {kmPerYear=47500} as double,",
				"          {kmPerYear=48000} as double,",
				"          {kmPerYear=48500} as double,",
				"          {kmPerYear=49000} as double,",
				"          {kmPerYear=49500} as double,",
				"          {kmPerYear=50000} as double,",
				"          Landgemeinde as double,",
				"          Kleinstadt as double,",
				"          Mittelstadt as double,",
				"          {Gro�stadt} as double,",
				"          {Baden-Württemberg} as double,",
				"          Bayern as double,",
				"          Berlin as double,",
				"          Brandenburg as double,",
				"          Bremen as double,",
				"          Hamburg as double,",
				"          Hessen as double,",
				"          {Mecklenburg-Vorpommern} as double,",
				"          Niedersachsen as double,",
				"          {Nordrhein-Westfalen} as double,",
				"          {Rheinland-Pfalz} as double,",
				"          Saarland as double,",
				"          Sachsen as double,",
				"          {Sachsen-Anhalt} as double,",
				"          {Schleswig-Holstein} as double,",
				"          {Thüringen} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceDE2019",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          MeanKmPerYear as double,",
				"          {kmPerYear=0} as double,",
				"          {kmPerYear=500} as double,",
				"          {kmPerYear=1000} as double,",
				"          {kmPerYear=1500} as double,",
				"          {kmPerYear=2000} as double,",
				"          {kmPerYear=2500} as double,",
				"          {kmPerYear=3000} as double,",
				"          {kmPerYear=3500} as double,",
				"          {kmPerYear=4000} as double,",
				"          {kmPerYear=4500} as double,",
				"          {kmPerYear=5000} as double,",
				"          {kmPerYear=5500} as double,",
				"          {kmPerYear=6000} as double,",
				"          {kmPerYear=6500} as double,",
				"          {kmPerYear=7000} as double,",
				"          {kmPerYear=7500} as double,",
				"          {kmPerYear=8000} as double,",
				"          {kmPerYear=8500} as double,",
				"          {kmPerYear=9000} as double,",
				"          {kmPerYear=9500} as double,",
				"          {kmPerYear=10000} as double,",
				"          {kmPerYear=10500} as double,",
				"          {kmPerYear=11000} as double,",
				"          {kmPerYear=11500} as double,",
				"          {kmPerYear=12000} as double,",
				"          {kmPerYear=12500} as double,",
				"          {kmPerYear=13000} as double,",
				"          {kmPerYear=13500} as double,",
				"          {kmPerYear=14000} as double,",
				"          {kmPerYear=14500} as double,",
				"          {kmPerYear=15000} as double,",
				"          {kmPerYear=15500} as double,",
				"          {kmPerYear=16000} as double,",
				"          {kmPerYear=16500} as double,",
				"          {kmPerYear=17000} as double,",
				"          {kmPerYear=17500} as double,",
				"          {kmPerYear=18000} as double,",
				"          {kmPerYear=18500} as double,",
				"          {kmPerYear=19000} as double,",
				"          {kmPerYear=19500} as double,",
				"          {kmPerYear=20000} as double,",
				"          {kmPerYear=20500} as double,",
				"          {kmPerYear=21000} as double,",
				"          {kmPerYear=21500} as double,",
				"          {kmPerYear=22000} as double,",
				"          {kmPerYear=22500} as double,",
				"          {kmPerYear=23000} as double,",
				"          {kmPerYear=23500} as double,",
				"          {kmPerYear=24000} as double,",
				"          {kmPerYear=24500} as double,",
				"          {kmPerYear=25000} as double,",
				"          {kmPerYear=25500} as double,",
				"          {kmPerYear=26000} as double,",
				"          {kmPerYear=26500} as double,",
				"          {kmPerYear=27000} as double,",
				"          {kmPerYear=27500} as double,",
				"          {kmPerYear=28000} as double,",
				"          {kmPerYear=28500} as double,",
				"          {kmPerYear=29000} as double,",
				"          {kmPerYear=29500} as double,",
				"          {kmPerYear=30000} as double,",
				"          {kmPerYear=30500} as double,",
				"          {kmPerYear=31000} as double,",
				"          {kmPerYear=31500} as double,",
				"          {kmPerYear=32000} as double,",
				"          {kmPerYear=32500} as double,",
				"          {kmPerYear=33000} as double,",
				"          {kmPerYear=33500} as double,",
				"          {kmPerYear=34000} as double,",
				"          {kmPerYear=34500} as double,",
				"          {kmPerYear=35000} as double,",
				"          {kmPerYear=35500} as double,",
				"          {kmPerYear=36000} as double,",
				"          {kmPerYear=36500} as double,",
				"          {kmPerYear=37000} as double,",
				"          {kmPerYear=37500} as double,",
				"          {kmPerYear=38000} as double,",
				"          {kmPerYear=38500} as double,",
				"          {kmPerYear=39000} as double,",
				"          {kmPerYear=39500} as double,",
				"          {kmPerYear=40000} as double,",
				"          {kmPerYear=40500} as double,",
				"          {kmPerYear=41000} as double,",
				"          {kmPerYear=41500} as double,",
				"          {kmPerYear=42000} as double,",
				"          {kmPerYear=42500} as double,",
				"          {kmPerYear=43000} as double,",
				"          {kmPerYear=43500} as double,",
				"          {kmPerYear=44000} as double,",
				"          {kmPerYear=44500} as double,",
				"          {kmPerYear=45000} as double,",
				"          {kmPerYear=45500} as double,",
				"          {kmPerYear=46000} as double,",
				"          {kmPerYear=46500} as double,",
				"          {kmPerYear=47000} as double,",
				"          {kmPerYear=47500} as double,",
				"          {kmPerYear=48000} as double,",
				"          {kmPerYear=48500} as double,",
				"          {kmPerYear=49000} as double,",
				"          {kmPerYear=49500} as double,",
				"          {kmPerYear=50000} as double,",
				"          T4 as double,",
				"          T3 as double,",
				"          T2 as double,",
				"          T1 as double,",
				"          Anhui as double,",
				"          Beijing as double,",
				"          Chongqing as double,",
				"          Fujian as double,",
				"          Gansu as double,",
				"          Guangdong as double,",
				"          Guangxi as double,",
				"          Guizhou as double,",
				"          Hainan as double,",
				"          Hebei as double,",
				"          Heilongjiang as double,",
				"          Henan as double,",
				"          {Hong Kong} as double,",
				"          Hubei as double,",
				"          Hunan as double,",
				"          {Inner Mongolia} as double,",
				"          Jiangsu as double,",
				"          Jiangxi as double,",
				"          Jilin as double,",
				"          Liaoning as double,",
				"          Macau as double,",
				"          Ningxia as double,",
				"          Qinghai as double,",
				"          Shaanxi as double,",
				"          Shandong as double,",
				"          Shanghai as double,",
				"          Shanxi as double,",
				"          Sichuan as double,",
				"          Tianjin as double,",
				"          Tibet as double,",
				"          Xinjiang as double,",
				"          Yunnan as double,",
				"          Zhejiang as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceCN2019",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          MeanKmPerYear as double,",
				"          {kmPerYear=0} as double,",
				"          {kmPerYear=500} as double,",
				"          {kmPerYear=1000} as double,",
				"          {kmPerYear=1500} as double,",
				"          {kmPerYear=2000} as double,",
				"          {kmPerYear=2500} as double,",
				"          {kmPerYear=3000} as double,",
				"          {kmPerYear=3500} as double,",
				"          {kmPerYear=4000} as double,",
				"          {kmPerYear=4500} as double,",
				"          {kmPerYear=5000} as double,",
				"          {kmPerYear=5500} as double,",
				"          {kmPerYear=6000} as double,",
				"          {kmPerYear=6500} as double,",
				"          {kmPerYear=7000} as double,",
				"          {kmPerYear=7500} as double,",
				"          {kmPerYear=8000} as double,",
				"          {kmPerYear=8500} as double,",
				"          {kmPerYear=9000} as double,",
				"          {kmPerYear=9500} as double,",
				"          {kmPerYear=10000} as double,",
				"          {kmPerYear=10500} as double,",
				"          {kmPerYear=11000} as double,",
				"          {kmPerYear=11500} as double,",
				"          {kmPerYear=12000} as double,",
				"          {kmPerYear=12500} as double,",
				"          {kmPerYear=13000} as double,",
				"          {kmPerYear=13500} as double,",
				"          {kmPerYear=14000} as double,",
				"          {kmPerYear=14500} as double,",
				"          {kmPerYear=15000} as double,",
				"          {kmPerYear=15500} as double,",
				"          {kmPerYear=16000} as double,",
				"          {kmPerYear=16500} as double,",
				"          {kmPerYear=17000} as double,",
				"          {kmPerYear=17500} as double,",
				"          {kmPerYear=18000} as double,",
				"          {kmPerYear=18500} as double,",
				"          {kmPerYear=19000} as double,",
				"          {kmPerYear=19500} as double,",
				"          {kmPerYear=20000} as double,",
				"          {kmPerYear=20500} as double,",
				"          {kmPerYear=21000} as double,",
				"          {kmPerYear=21500} as double,",
				"          {kmPerYear=22000} as double,",
				"          {kmPerYear=22500} as double,",
				"          {kmPerYear=23000} as double,",
				"          {kmPerYear=23500} as double,",
				"          {kmPerYear=24000} as double,",
				"          {kmPerYear=24500} as double,",
				"          {kmPerYear=25000} as double,",
				"          {kmPerYear=25500} as double,",
				"          {kmPerYear=26000} as double,",
				"          {kmPerYear=26500} as double,",
				"          {kmPerYear=27000} as double,",
				"          {kmPerYear=27500} as double,",
				"          {kmPerYear=28000} as double,",
				"          {kmPerYear=28500} as double,",
				"          {kmPerYear=29000} as double,",
				"          {kmPerYear=29500} as double,",
				"          {kmPerYear=30000} as double,",
				"          {kmPerYear=30500} as double,",
				"          {kmPerYear=31000} as double,",
				"          {kmPerYear=31500} as double,",
				"          {kmPerYear=32000} as double,",
				"          {kmPerYear=32500} as double,",
				"          {kmPerYear=33000} as double,",
				"          {kmPerYear=33500} as double,",
				"          {kmPerYear=34000} as double,",
				"          {kmPerYear=34500} as double,",
				"          {kmPerYear=35000} as double,",
				"          {kmPerYear=35500} as double,",
				"          {kmPerYear=36000} as double,",
				"          {kmPerYear=36500} as double,",
				"          {kmPerYear=37000} as double,",
				"          {kmPerYear=37500} as double,",
				"          {kmPerYear=38000} as double,",
				"          {kmPerYear=38500} as double,",
				"          {kmPerYear=39000} as double,",
				"          {kmPerYear=39500} as double,",
				"          {kmPerYear=40000} as double,",
				"          {kmPerYear=40500} as double,",
				"          {kmPerYear=41000} as double,",
				"          {kmPerYear=41500} as double,",
				"          {kmPerYear=42000} as double,",
				"          {kmPerYear=42500} as double,",
				"          {kmPerYear=43000} as double,",
				"          {kmPerYear=43500} as double,",
				"          {kmPerYear=44000} as double,",
				"          {kmPerYear=44500} as double,",
				"          {kmPerYear=45000} as double,",
				"          {kmPerYear=45500} as double,",
				"          {kmPerYear=46000} as double,",
				"          {kmPerYear=46500} as double,",
				"          {kmPerYear=47000} as double,",
				"          {kmPerYear=47500} as double,",
				"          {kmPerYear=48000} as double,",
				"          {kmPerYear=48500} as double,",
				"          {kmPerYear=49000} as double,",
				"          {kmPerYear=49500} as double,",
				"          {kmPerYear=50000} as double,",
				"          {L�ndlicher Raum} as double,",
				"          {Kleinst�dtischer Raum} as double,",
				"          {St�dtischer Raum} as double,",
				"          Ballungsraum as double,",
				"          {East Midlands} as double,",
				"          {East of England} as double,",
				"          {Greater London} as double,",
				"          {North East England} as double,",
				"          {North West England} as double,",
				"          {Northern Ireland} as double,",
				"          Scotland as double,",
				"          {South East England} as double,",
				"          {South West England} as double,",
				"          Wales as double,",
				"          {West Midlands} as double,",
				"          {Yorkshire and The Humber} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceUK2019",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          MeanKmPerYear as double,",
				"          {kmPerYear=0} as double,",
				"          {kmPerYear=500} as double,",
				"          {kmPerYear=1000} as double,",
				"          {kmPerYear=1500} as double,",
				"          {kmPerYear=2000} as double,",
				"          {kmPerYear=2500} as double,",
				"          {kmPerYear=3000} as double,",
				"          {kmPerYear=3500} as double,",
				"          {kmPerYear=4000} as double,",
				"          {kmPerYear=4500} as double,",
				"          {kmPerYear=5000} as double,",
				"          {kmPerYear=5500} as double,",
				"          {kmPerYear=6000} as double,",
				"          {kmPerYear=6500} as double,",
				"          {kmPerYear=7000} as double,",
				"          {kmPerYear=7500} as double,",
				"          {kmPerYear=8000} as double,",
				"          {kmPerYear=8500} as double,",
				"          {kmPerYear=9000} as double,",
				"          {kmPerYear=9500} as double,",
				"          {kmPerYear=10000} as double,",
				"          {kmPerYear=10500} as double,",
				"          {kmPerYear=11000} as double,",
				"          {kmPerYear=11500} as double,",
				"          {kmPerYear=12000} as double,",
				"          {kmPerYear=12500} as double,",
				"          {kmPerYear=13000} as double,",
				"          {kmPerYear=13500} as double,",
				"          {kmPerYear=14000} as double,",
				"          {kmPerYear=14500} as double,",
				"          {kmPerYear=15000} as double,",
				"          {kmPerYear=15500} as double,",
				"          {kmPerYear=16000} as double,",
				"          {kmPerYear=16500} as double,",
				"          {kmPerYear=17000} as double,",
				"          {kmPerYear=17500} as double,",
				"          {kmPerYear=18000} as double,",
				"          {kmPerYear=18500} as double,",
				"          {kmPerYear=19000} as double,",
				"          {kmPerYear=19500} as double,",
				"          {kmPerYear=20000} as double,",
				"          {kmPerYear=20500} as double,",
				"          {kmPerYear=21000} as double,",
				"          {kmPerYear=21500} as double,",
				"          {kmPerYear=22000} as double,",
				"          {kmPerYear=22500} as double,",
				"          {kmPerYear=23000} as double,",
				"          {kmPerYear=23500} as double,",
				"          {kmPerYear=24000} as double,",
				"          {kmPerYear=24500} as double,",
				"          {kmPerYear=25000} as double,",
				"          {kmPerYear=25500} as double,",
				"          {kmPerYear=26000} as double,",
				"          {kmPerYear=26500} as double,",
				"          {kmPerYear=27000} as double,",
				"          {kmPerYear=27500} as double,",
				"          {kmPerYear=28000} as double,",
				"          {kmPerYear=28500} as double,",
				"          {kmPerYear=29000} as double,",
				"          {kmPerYear=29500} as double,",
				"          {kmPerYear=30000} as double,",
				"          {kmPerYear=30500} as double,",
				"          {kmPerYear=31000} as double,",
				"          {kmPerYear=31500} as double,",
				"          {kmPerYear=32000} as double,",
				"          {kmPerYear=32500} as double,",
				"          {kmPerYear=33000} as double,",
				"          {kmPerYear=33500} as double,",
				"          {kmPerYear=34000} as double,",
				"          {kmPerYear=34500} as double,",
				"          {kmPerYear=35000} as double,",
				"          {kmPerYear=35500} as double,",
				"          {kmPerYear=36000} as double,",
				"          {kmPerYear=36500} as double,",
				"          {kmPerYear=37000} as double,",
				"          {kmPerYear=37500} as double,",
				"          {kmPerYear=38000} as double,",
				"          {kmPerYear=38500} as double,",
				"          {kmPerYear=39000} as double,",
				"          {kmPerYear=39500} as double,",
				"          {kmPerYear=40000} as double,",
				"          {kmPerYear=40500} as double,",
				"          {kmPerYear=41000} as double,",
				"          {kmPerYear=41500} as double,",
				"          {kmPerYear=42000} as double,",
				"          {kmPerYear=42500} as double,",
				"          {kmPerYear=43000} as double,",
				"          {kmPerYear=43500} as double,",
				"          {kmPerYear=44000} as double,",
				"          {kmPerYear=44500} as double,",
				"          {kmPerYear=45000} as double,",
				"          {kmPerYear=45500} as double,",
				"          {kmPerYear=46000} as double,",
				"          {kmPerYear=46500} as double,",
				"          {kmPerYear=47000} as double,",
				"          {kmPerYear=47500} as double,",
				"          {kmPerYear=48000} as double,",
				"          {kmPerYear=48500} as double,",
				"          {kmPerYear=49000} as double,",
				"          {kmPerYear=49500} as double,",
				"          {kmPerYear=50000} as double,",
				"          Alabama as double,",
				"          Alaska as double,",
				"          Arizona as double,",
				"          Arkansas as double,",
				"          California as double,",
				"          Colorado as double,",
				"          Connecticut as double,",
				"          Delaware as double,",
				"          {District of Columbia} as double,",
				"          Florida as double,",
				"          Georgia as double,",
				"          Hawaii as double,",
				"          Idaho as double,",
				"          Illinois as double,",
				"          Indiana as double,",
				"          Iowa as double,",
				"          Kansas as double,",
				"          Kentucky as double,",
				"          Louisiana as double,",
				"          Maine as double,",
				"          Maryland as double,",
				"          Massachusetts as double,",
				"          Michigan as double,",
				"          Minnesota as double,",
				"          Mississippi as double,",
				"          Missouri as double,",
				"          Montana as double,",
				"          Nebraska as double,",
				"          Nevada as double,",
				"          {New Hampshire} as double,",
				"          {New Jersey} as double,",
				"          {New Mexico} as double,",
				"          {New York} as double,",
				"          {North Carolina} as double,",
				"          {North Dakota} as double,",
				"          Ohio as double,",
				"          Oklahoma as double,",
				"          Oregon as double,",
				"          Pennsylvania as double,",
				"          {Rhode Island} as double,",
				"          {South Carolina} as double,",
				"          {South Dakota} as double,",
				"          Tennessee as double,",
				"          Texas as double,",
				"          Utah as double,",
				"          Vermont as double,",
				"          Virginia as double,",
				"          Washington as double,",
				"          {West Virginia} as double,",
				"          Wisconsin as double,",
				"          Wyoming as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceUS2019",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          Landgemeinde as double,",
				"          Kleinstadt as double,",
				"          Mittelstadt as double,",
				"          {Gro�stadt} as double,",
				"          {Baden-Württemberg} as double,",
				"          Bayern as double,",
				"          Berlin as double,",
				"          Brandenburg as double,",
				"          Bremen as double,",
				"          Hamburg as double,",
				"          Hessen as double,",
				"          {Mecklenburg-Vorpommern} as double,",
				"          Niedersachsen as double,",
				"          {Nordrhein-Westfalen} as double,",
				"          {Rheinland-Pfalz} as double,",
				"          Saarland as double,",
				"          Sachsen as double,",
				"          {Sachsen-Anhalt} as double,",
				"          {Schleswig-Holstein} as double,",
				"          {Thüringen} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceDE2020",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          T4 as double,",
				"          T3 as double,",
				"          T2 as double,",
				"          T1 as double,",
				"          Anhui as double,",
				"          Beijing as double,",
				"          Chongqing as double,",
				"          Fujian as double,",
				"          Gansu as double,",
				"          Guangdong as double,",
				"          Guangxi as double,",
				"          Guizhou as double,",
				"          Hainan as double,",
				"          Hebei as double,",
				"          Heilongjiang as double,",
				"          Henan as double,",
				"          {Hong Kong} as double,",
				"          Hubei as double,",
				"          Hunan as double,",
				"          {Inner Mongolia} as double,",
				"          Jiangsu as double,",
				"          Jiangxi as double,",
				"          Jilin as double,",
				"          Liaoning as double,",
				"          Macau as double,",
				"          Ningxia as double,",
				"          Qinghai as double,",
				"          Shaanxi as double,",
				"          Shandong as double,",
				"          Shanghai as double,",
				"          Shanxi as double,",
				"          Sichuan as double,",
				"          Tianjin as double,",
				"          Tibet as double,",
				"          Xinjiang as double,",
				"          Yunnan as double,",
				"          Zhejiang as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceCN2020",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          {L�ndlicher Raum} as double,",
				"          {Kleinst�dtischer Raum} as double,",
				"          {St�dtischer Raum} as double,",
				"          Ballungsraum as double,",
				"          {East Midlands} as double,",
				"          {East of England} as double,",
				"          {Greater London} as double,",
				"          {North East England} as double,",
				"          {North West England} as double,",
				"          {Northern Ireland} as double,",
				"          Scotland as double,",
				"          {South East England} as double,",
				"          {South West England} as double,",
				"          Wales as double,",
				"          {West Midlands} as double,",
				"          {Yorkshire and The Humber} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceUK2020",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          Alabama as double,",
				"          Alaska as double,",
				"          Arizona as double,",
				"          Arkansas as double,",
				"          California as double,",
				"          Colorado as double,",
				"          Connecticut as double,",
				"          Delaware as double,",
				"          {District of Columbia} as double,",
				"          Florida as double,",
				"          Georgia as double,",
				"          Hawaii as double,",
				"          Idaho as double,",
				"          Illinois as double,",
				"          Indiana as double,",
				"          Iowa as double,",
				"          Kansas as double,",
				"          Kentucky as double,",
				"          Louisiana as double,",
				"          Maine as double,",
				"          Maryland as double,",
				"          Massachusetts as double,",
				"          Michigan as double,",
				"          Minnesota as double,",
				"          Mississippi as double,",
				"          Missouri as double,",
				"          Montana as double,",
				"          Nebraska as double,",
				"          Nevada as double,",
				"          {New Hampshire} as double,",
				"          {New Jersey} as double,",
				"          {New Mexico} as double,",
				"          {New York} as double,",
				"          {North Carolina} as double,",
				"          {North Dakota} as double,",
				"          Ohio as double,",
				"          Oklahoma as double,",
				"          Oregon as double,",
				"          Pennsylvania as double,",
				"          {Rhode Island} as double,",
				"          {South Carolina} as double,",
				"          {South Dakota} as double,",
				"          Tennessee as double,",
				"          Texas as double,",
				"          Utah as double,",
				"          Vermont as double,",
				"          Virginia as double,",
				"          Washington as double,",
				"          {West Virginia} as double,",
				"          Wisconsin as double,",
				"          Wyoming as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceUS2020",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          MeanKmPerYear as double,",
				"          {kmPerYear=0} as double,",
				"          {kmPerYear=500} as double,",
				"          {kmPerYear=1000} as double,",
				"          {kmPerYear=1500} as double,",
				"          {kmPerYear=2000} as double,",
				"          {kmPerYear=2500} as double,",
				"          {kmPerYear=3000} as double,",
				"          {kmPerYear=3500} as double,",
				"          {kmPerYear=4000} as double,",
				"          {kmPerYear=4500} as double,",
				"          {kmPerYear=5000} as double,",
				"          {kmPerYear=5500} as double,",
				"          {kmPerYear=6000} as double,",
				"          {kmPerYear=6500} as double,",
				"          {kmPerYear=7000} as double,",
				"          {kmPerYear=7500} as double,",
				"          {kmPerYear=8000} as double,",
				"          {kmPerYear=8500} as double,",
				"          {kmPerYear=9000} as double,",
				"          {kmPerYear=9500} as double,",
				"          {kmPerYear=10000} as double,",
				"          {kmPerYear=10500} as double,",
				"          {kmPerYear=11000} as double,",
				"          {kmPerYear=11500} as double,",
				"          {kmPerYear=12000} as double,",
				"          {kmPerYear=12500} as double,",
				"          {kmPerYear=13000} as double,",
				"          {kmPerYear=13500} as double,",
				"          {kmPerYear=14000} as double,",
				"          {kmPerYear=14500} as double,",
				"          {kmPerYear=15000} as double,",
				"          {kmPerYear=15500} as double,",
				"          {kmPerYear=16000} as double,",
				"          {kmPerYear=16500} as double,",
				"          {kmPerYear=17000} as double,",
				"          {kmPerYear=17500} as double,",
				"          {kmPerYear=18000} as double,",
				"          {kmPerYear=18500} as double,",
				"          {kmPerYear=19000} as double,",
				"          {kmPerYear=19500} as double,",
				"          {kmPerYear=20000} as double,",
				"          {kmPerYear=20500} as double,",
				"          {kmPerYear=21000} as double,",
				"          {kmPerYear=21500} as double,",
				"          {kmPerYear=22000} as double,",
				"          {kmPerYear=22500} as double,",
				"          {kmPerYear=23000} as double,",
				"          {kmPerYear=23500} as double,",
				"          {kmPerYear=24000} as double,",
				"          {kmPerYear=24500} as double,",
				"          {kmPerYear=25000} as double,",
				"          {kmPerYear=25500} as double,",
				"          {kmPerYear=26000} as double,",
				"          {kmPerYear=26500} as double,",
				"          {kmPerYear=27000} as double,",
				"          {kmPerYear=27500} as double,",
				"          {kmPerYear=28000} as double,",
				"          {kmPerYear=28500} as double,",
				"          {kmPerYear=29000} as double,",
				"          {kmPerYear=29500} as double,",
				"          {kmPerYear=30000} as double,",
				"          {kmPerYear=30500} as double,",
				"          {kmPerYear=31000} as double,",
				"          {kmPerYear=31500} as double,",
				"          {kmPerYear=32000} as double,",
				"          {kmPerYear=32500} as double,",
				"          {kmPerYear=33000} as double,",
				"          {kmPerYear=33500} as double,",
				"          {kmPerYear=34000} as double,",
				"          {kmPerYear=34500} as double,",
				"          {kmPerYear=35000} as double,",
				"          {kmPerYear=35500} as double,",
				"          {kmPerYear=36000} as double,",
				"          {kmPerYear=36500} as double,",
				"          {kmPerYear=37000} as double,",
				"          {kmPerYear=37500} as double,",
				"          {kmPerYear=38000} as double,",
				"          {kmPerYear=38500} as double,",
				"          {kmPerYear=39000} as double,",
				"          {kmPerYear=39500} as double,",
				"          {kmPerYear=40000} as double,",
				"          {kmPerYear=40500} as double,",
				"          {kmPerYear=41000} as double,",
				"          {kmPerYear=41500} as double,",
				"          {kmPerYear=42000} as double,",
				"          {kmPerYear=42500} as double,",
				"          {kmPerYear=43000} as double,",
				"          {kmPerYear=43500} as double,",
				"          {kmPerYear=44000} as double,",
				"          {kmPerYear=44500} as double,",
				"          {kmPerYear=45000} as double,",
				"          {kmPerYear=45500} as double,",
				"          {kmPerYear=46000} as double,",
				"          {kmPerYear=46500} as double,",
				"          {kmPerYear=47000} as double,",
				"          {kmPerYear=47500} as double,",
				"          {kmPerYear=48000} as double,",
				"          {kmPerYear=48500} as double,",
				"          {kmPerYear=49000} as double,",
				"          {kmPerYear=49500} as double,",
				"          {kmPerYear=50000} as double,",
				"          Landgemeinde as double,",
				"          Kleinstadt as double,",
				"          Mittelstadt as double,",
				"          {Gro�stadt} as double,",
				"          {Baden-Württemberg} as double,",
				"          Bayern as double,",
				"          Berlin as double,",
				"          Brandenburg as double,",
				"          Bremen as double,",
				"          Hamburg as double,",
				"          Hessen as double,",
				"          {Mecklenburg-Vorpommern} as double,",
				"          Niedersachsen as double,",
				"          {Nordrhein-Westfalen} as double,",
				"          {Rheinland-Pfalz} as double,",
				"          Saarland as double,",
				"          Sachsen as double,",
				"          {Sachsen-Anhalt} as double,",
				"          {Schleswig-Holstein} as double,",
				"          {Thüringen} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceDE2021",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          MeanKmPerYear as double,",
				"          {kmPerYear=0} as double,",
				"          {kmPerYear=500} as double,",
				"          {kmPerYear=1000} as double,",
				"          {kmPerYear=1500} as double,",
				"          {kmPerYear=2000} as double,",
				"          {kmPerYear=2500} as double,",
				"          {kmPerYear=3000} as double,",
				"          {kmPerYear=3500} as double,",
				"          {kmPerYear=4000} as double,",
				"          {kmPerYear=4500} as double,",
				"          {kmPerYear=5000} as double,",
				"          {kmPerYear=5500} as double,",
				"          {kmPerYear=6000} as double,",
				"          {kmPerYear=6500} as double,",
				"          {kmPerYear=7000} as double,",
				"          {kmPerYear=7500} as double,",
				"          {kmPerYear=8000} as double,",
				"          {kmPerYear=8500} as double,",
				"          {kmPerYear=9000} as double,",
				"          {kmPerYear=9500} as double,",
				"          {kmPerYear=10000} as double,",
				"          {kmPerYear=10500} as double,",
				"          {kmPerYear=11000} as double,",
				"          {kmPerYear=11500} as double,",
				"          {kmPerYear=12000} as double,",
				"          {kmPerYear=12500} as double,",
				"          {kmPerYear=13000} as double,",
				"          {kmPerYear=13500} as double,",
				"          {kmPerYear=14000} as double,",
				"          {kmPerYear=14500} as double,",
				"          {kmPerYear=15000} as double,",
				"          {kmPerYear=15500} as double,",
				"          {kmPerYear=16000} as double,",
				"          {kmPerYear=16500} as double,",
				"          {kmPerYear=17000} as double,",
				"          {kmPerYear=17500} as double,",
				"          {kmPerYear=18000} as double,",
				"          {kmPerYear=18500} as double,",
				"          {kmPerYear=19000} as double,",
				"          {kmPerYear=19500} as double,",
				"          {kmPerYear=20000} as double,",
				"          {kmPerYear=20500} as double,",
				"          {kmPerYear=21000} as double,",
				"          {kmPerYear=21500} as double,",
				"          {kmPerYear=22000} as double,",
				"          {kmPerYear=22500} as double,",
				"          {kmPerYear=23000} as double,",
				"          {kmPerYear=23500} as double,",
				"          {kmPerYear=24000} as double,",
				"          {kmPerYear=24500} as double,",
				"          {kmPerYear=25000} as double,",
				"          {kmPerYear=25500} as double,",
				"          {kmPerYear=26000} as double,",
				"          {kmPerYear=26500} as double,",
				"          {kmPerYear=27000} as double,",
				"          {kmPerYear=27500} as double,",
				"          {kmPerYear=28000} as double,",
				"          {kmPerYear=28500} as double,",
				"          {kmPerYear=29000} as double,",
				"          {kmPerYear=29500} as double,",
				"          {kmPerYear=30000} as double,",
				"          {kmPerYear=30500} as double,",
				"          {kmPerYear=31000} as double,",
				"          {kmPerYear=31500} as double,",
				"          {kmPerYear=32000} as double,",
				"          {kmPerYear=32500} as double,",
				"          {kmPerYear=33000} as double,",
				"          {kmPerYear=33500} as double,",
				"          {kmPerYear=34000} as double,",
				"          {kmPerYear=34500} as double,",
				"          {kmPerYear=35000} as double,",
				"          {kmPerYear=35500} as double,",
				"          {kmPerYear=36000} as double,",
				"          {kmPerYear=36500} as double,",
				"          {kmPerYear=37000} as double,",
				"          {kmPerYear=37500} as double,",
				"          {kmPerYear=38000} as double,",
				"          {kmPerYear=38500} as double,",
				"          {kmPerYear=39000} as double,",
				"          {kmPerYear=39500} as double,",
				"          {kmPerYear=40000} as double,",
				"          {kmPerYear=40500} as double,",
				"          {kmPerYear=41000} as double,",
				"          {kmPerYear=41500} as double,",
				"          {kmPerYear=42000} as double,",
				"          {kmPerYear=42500} as double,",
				"          {kmPerYear=43000} as double,",
				"          {kmPerYear=43500} as double,",
				"          {kmPerYear=44000} as double,",
				"          {kmPerYear=44500} as double,",
				"          {kmPerYear=45000} as double,",
				"          {kmPerYear=45500} as double,",
				"          {kmPerYear=46000} as double,",
				"          {kmPerYear=46500} as double,",
				"          {kmPerYear=47000} as double,",
				"          {kmPerYear=47500} as double,",
				"          {kmPerYear=48000} as double,",
				"          {kmPerYear=48500} as double,",
				"          {kmPerYear=49000} as double,",
				"          {kmPerYear=49500} as double,",
				"          {kmPerYear=50000} as double,",
				"          T4 as double,",
				"          T3 as double,",
				"          T2 as double,",
				"          T1 as double,",
				"          Anhui as double,",
				"          Beijing as double,",
				"          Chongqing as double,",
				"          Fujian as double,",
				"          Gansu as double,",
				"          Guangdong as double,",
				"          Guangxi as double,",
				"          Guizhou as double,",
				"          Hainan as double,",
				"          Hebei as double,",
				"          Heilongjiang as double,",
				"          Henan as double,",
				"          {Hong Kong} as double,",
				"          Hubei as double,",
				"          Hunan as double,",
				"          {Inner Mongolia} as double,",
				"          Jiangsu as double,",
				"          Jiangxi as double,",
				"          Jilin as double,",
				"          Liaoning as double,",
				"          Macau as double,",
				"          Ningxia as double,",
				"          Qinghai as double,",
				"          Shaanxi as double,",
				"          Shandong as double,",
				"          Shanghai as double,",
				"          Shanxi as double,",
				"          Sichuan as double,",
				"          Tianjin as double,",
				"          Tibet as double,",
				"          Xinjiang as double,",
				"          Yunnan as double,",
				"          Zhejiang as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceCN2021",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          MeanKmPerYear as double,",
				"          {kmPerYear=0} as double,",
				"          {kmPerYear=500} as double,",
				"          {kmPerYear=1000} as double,",
				"          {kmPerYear=1500} as double,",
				"          {kmPerYear=2000} as double,",
				"          {kmPerYear=2500} as double,",
				"          {kmPerYear=3000} as double,",
				"          {kmPerYear=3500} as double,",
				"          {kmPerYear=4000} as double,",
				"          {kmPerYear=4500} as double,",
				"          {kmPerYear=5000} as double,",
				"          {kmPerYear=5500} as double,",
				"          {kmPerYear=6000} as double,",
				"          {kmPerYear=6500} as double,",
				"          {kmPerYear=7000} as double,",
				"          {kmPerYear=7500} as double,",
				"          {kmPerYear=8000} as double,",
				"          {kmPerYear=8500} as double,",
				"          {kmPerYear=9000} as double,",
				"          {kmPerYear=9500} as double,",
				"          {kmPerYear=10000} as double,",
				"          {kmPerYear=10500} as double,",
				"          {kmPerYear=11000} as double,",
				"          {kmPerYear=11500} as double,",
				"          {kmPerYear=12000} as double,",
				"          {kmPerYear=12500} as double,",
				"          {kmPerYear=13000} as double,",
				"          {kmPerYear=13500} as double,",
				"          {kmPerYear=14000} as double,",
				"          {kmPerYear=14500} as double,",
				"          {kmPerYear=15000} as double,",
				"          {kmPerYear=15500} as double,",
				"          {kmPerYear=16000} as double,",
				"          {kmPerYear=16500} as double,",
				"          {kmPerYear=17000} as double,",
				"          {kmPerYear=17500} as double,",
				"          {kmPerYear=18000} as double,",
				"          {kmPerYear=18500} as double,",
				"          {kmPerYear=19000} as double,",
				"          {kmPerYear=19500} as double,",
				"          {kmPerYear=20000} as double,",
				"          {kmPerYear=20500} as double,",
				"          {kmPerYear=21000} as double,",
				"          {kmPerYear=21500} as double,",
				"          {kmPerYear=22000} as double,",
				"          {kmPerYear=22500} as double,",
				"          {kmPerYear=23000} as double,",
				"          {kmPerYear=23500} as double,",
				"          {kmPerYear=24000} as double,",
				"          {kmPerYear=24500} as double,",
				"          {kmPerYear=25000} as double,",
				"          {kmPerYear=25500} as double,",
				"          {kmPerYear=26000} as double,",
				"          {kmPerYear=26500} as double,",
				"          {kmPerYear=27000} as double,",
				"          {kmPerYear=27500} as double,",
				"          {kmPerYear=28000} as double,",
				"          {kmPerYear=28500} as double,",
				"          {kmPerYear=29000} as double,",
				"          {kmPerYear=29500} as double,",
				"          {kmPerYear=30000} as double,",
				"          {kmPerYear=30500} as double,",
				"          {kmPerYear=31000} as double,",
				"          {kmPerYear=31500} as double,",
				"          {kmPerYear=32000} as double,",
				"          {kmPerYear=32500} as double,",
				"          {kmPerYear=33000} as double,",
				"          {kmPerYear=33500} as double,",
				"          {kmPerYear=34000} as double,",
				"          {kmPerYear=34500} as double,",
				"          {kmPerYear=35000} as double,",
				"          {kmPerYear=35500} as double,",
				"          {kmPerYear=36000} as double,",
				"          {kmPerYear=36500} as double,",
				"          {kmPerYear=37000} as double,",
				"          {kmPerYear=37500} as double,",
				"          {kmPerYear=38000} as double,",
				"          {kmPerYear=38500} as double,",
				"          {kmPerYear=39000} as double,",
				"          {kmPerYear=39500} as double,",
				"          {kmPerYear=40000} as double,",
				"          {kmPerYear=40500} as double,",
				"          {kmPerYear=41000} as double,",
				"          {kmPerYear=41500} as double,",
				"          {kmPerYear=42000} as double,",
				"          {kmPerYear=42500} as double,",
				"          {kmPerYear=43000} as double,",
				"          {kmPerYear=43500} as double,",
				"          {kmPerYear=44000} as double,",
				"          {kmPerYear=44500} as double,",
				"          {kmPerYear=45000} as double,",
				"          {kmPerYear=45500} as double,",
				"          {kmPerYear=46000} as double,",
				"          {kmPerYear=46500} as double,",
				"          {kmPerYear=47000} as double,",
				"          {kmPerYear=47500} as double,",
				"          {kmPerYear=48000} as double,",
				"          {kmPerYear=48500} as double,",
				"          {kmPerYear=49000} as double,",
				"          {kmPerYear=49500} as double,",
				"          {kmPerYear=50000} as double,",
				"          {L�ndlicher Raum} as double,",
				"          {Kleinst�dtischer Raum} as double,",
				"          {St�dtischer Raum} as double,",
				"          Ballungsraum as double,",
				"          {East Midlands} as double,",
				"          {East of England} as double,",
				"          {Greater London} as double,",
				"          {North East England} as double,",
				"          {North West England} as double,",
				"          {Northern Ireland} as double,",
				"          Scotland as double,",
				"          {South East England} as double,",
				"          {South West England} as double,",
				"          Wales as double,",
				"          {West Midlands} as double,",
				"          {Yorkshire and The Humber} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceUK2021",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          MeanKmPerYear as double,",
				"          {kmPerYear=0} as double,",
				"          {kmPerYear=500} as double,",
				"          {kmPerYear=1000} as double,",
				"          {kmPerYear=1500} as double,",
				"          {kmPerYear=2000} as double,",
				"          {kmPerYear=2500} as double,",
				"          {kmPerYear=3000} as double,",
				"          {kmPerYear=3500} as double,",
				"          {kmPerYear=4000} as double,",
				"          {kmPerYear=4500} as double,",
				"          {kmPerYear=5000} as double,",
				"          {kmPerYear=5500} as double,",
				"          {kmPerYear=6000} as double,",
				"          {kmPerYear=6500} as double,",
				"          {kmPerYear=7000} as double,",
				"          {kmPerYear=7500} as double,",
				"          {kmPerYear=8000} as double,",
				"          {kmPerYear=8500} as double,",
				"          {kmPerYear=9000} as double,",
				"          {kmPerYear=9500} as double,",
				"          {kmPerYear=10000} as double,",
				"          {kmPerYear=10500} as double,",
				"          {kmPerYear=11000} as double,",
				"          {kmPerYear=11500} as double,",
				"          {kmPerYear=12000} as double,",
				"          {kmPerYear=12500} as double,",
				"          {kmPerYear=13000} as double,",
				"          {kmPerYear=13500} as double,",
				"          {kmPerYear=14000} as double,",
				"          {kmPerYear=14500} as double,",
				"          {kmPerYear=15000} as double,",
				"          {kmPerYear=15500} as double,",
				"          {kmPerYear=16000} as double,",
				"          {kmPerYear=16500} as double,",
				"          {kmPerYear=17000} as double,",
				"          {kmPerYear=17500} as double,",
				"          {kmPerYear=18000} as double,",
				"          {kmPerYear=18500} as double,",
				"          {kmPerYear=19000} as double,",
				"          {kmPerYear=19500} as double,",
				"          {kmPerYear=20000} as double,",
				"          {kmPerYear=20500} as double,",
				"          {kmPerYear=21000} as double,",
				"          {kmPerYear=21500} as double,",
				"          {kmPerYear=22000} as double,",
				"          {kmPerYear=22500} as double,",
				"          {kmPerYear=23000} as double,",
				"          {kmPerYear=23500} as double,",
				"          {kmPerYear=24000} as double,",
				"          {kmPerYear=24500} as double,",
				"          {kmPerYear=25000} as double,",
				"          {kmPerYear=25500} as double,",
				"          {kmPerYear=26000} as double,",
				"          {kmPerYear=26500} as double,",
				"          {kmPerYear=27000} as double,",
				"          {kmPerYear=27500} as double,",
				"          {kmPerYear=28000} as double,",
				"          {kmPerYear=28500} as double,",
				"          {kmPerYear=29000} as double,",
				"          {kmPerYear=29500} as double,",
				"          {kmPerYear=30000} as double,",
				"          {kmPerYear=30500} as double,",
				"          {kmPerYear=31000} as double,",
				"          {kmPerYear=31500} as double,",
				"          {kmPerYear=32000} as double,",
				"          {kmPerYear=32500} as double,",
				"          {kmPerYear=33000} as double,",
				"          {kmPerYear=33500} as double,",
				"          {kmPerYear=34000} as double,",
				"          {kmPerYear=34500} as double,",
				"          {kmPerYear=35000} as double,",
				"          {kmPerYear=35500} as double,",
				"          {kmPerYear=36000} as double,",
				"          {kmPerYear=36500} as double,",
				"          {kmPerYear=37000} as double,",
				"          {kmPerYear=37500} as double,",
				"          {kmPerYear=38000} as double,",
				"          {kmPerYear=38500} as double,",
				"          {kmPerYear=39000} as double,",
				"          {kmPerYear=39500} as double,",
				"          {kmPerYear=40000} as double,",
				"          {kmPerYear=40500} as double,",
				"          {kmPerYear=41000} as double,",
				"          {kmPerYear=41500} as double,",
				"          {kmPerYear=42000} as double,",
				"          {kmPerYear=42500} as double,",
				"          {kmPerYear=43000} as double,",
				"          {kmPerYear=43500} as double,",
				"          {kmPerYear=44000} as double,",
				"          {kmPerYear=44500} as double,",
				"          {kmPerYear=45000} as double,",
				"          {kmPerYear=45500} as double,",
				"          {kmPerYear=46000} as double,",
				"          {kmPerYear=46500} as double,",
				"          {kmPerYear=47000} as double,",
				"          {kmPerYear=47500} as double,",
				"          {kmPerYear=48000} as double,",
				"          {kmPerYear=48500} as double,",
				"          {kmPerYear=49000} as double,",
				"          {kmPerYear=49500} as double,",
				"          {kmPerYear=50000} as double,",
				"          Alabama as double,",
				"          Alaska as double,",
				"          Arizona as double,",
				"          Arkansas as double,",
				"          California as double,",
				"          Colorado as double,",
				"          Connecticut as double,",
				"          Delaware as double,",
				"          {District of Columbia} as double,",
				"          Florida as double,",
				"          Georgia as double,",
				"          Hawaii as double,",
				"          Idaho as double,",
				"          Illinois as double,",
				"          Indiana as double,",
				"          Iowa as double,",
				"          Kansas as double,",
				"          Kentucky as double,",
				"          Louisiana as double,",
				"          Maine as double,",
				"          Maryland as double,",
				"          Massachusetts as double,",
				"          Michigan as double,",
				"          Minnesota as double,",
				"          Mississippi as double,",
				"          Missouri as double,",
				"          Montana as double,",
				"          Nebraska as double,",
				"          Nevada as double,",
				"          {New Hampshire} as double,",
				"          {New Jersey} as double,",
				"          {New Mexico} as double,",
				"          {New York} as double,",
				"          {North Carolina} as double,",
				"          {North Dakota} as double,",
				"          Ohio as double,",
				"          Oklahoma as double,",
				"          Oregon as double,",
				"          Pennsylvania as double,",
				"          {Rhode Island} as double,",
				"          {South Carolina} as double,",
				"          {South Dakota} as double,",
				"          Tennessee as double,",
				"          Texas as double,",
				"          Utah as double,",
				"          Vermont as double,",
				"          Virginia as double,",
				"          Washington as double,",
				"          {West Virginia} as double,",
				"          Wisconsin as double,",
				"          Wyoming as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceUS2021",
				"sourceDE2019 compose(mapParameter(",
				"          market = 'DE',",
				"          year = '2019'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          AverageHoldingPeriod",
				"     ),",
				"     composition: 'averageHoldingPeriodSource') ~> flowletDE2019@(output1)",
				"sourceCN2019 compose(mapParameter(",
				"          market = 'CN',",
				"          year = '2019'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          AverageHoldingPeriod",
				"     ),",
				"     composition: 'averageHoldingPeriodSource') ~> flowletCN2019@(output1)",
				"sourceUK2019 compose(mapParameter(",
				"          market = 'UK',",
				"          year = '2019'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          AverageHoldingPeriod",
				"     ),",
				"     composition: 'averageHoldingPeriodSource') ~> flowletUK2019@(output1)",
				"sourceUS2019 compose(mapParameter(",
				"          market = 'US',",
				"          year = '2019'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          AverageHoldingPeriod",
				"     ),",
				"     composition: 'averageHoldingPeriodSource') ~> flowletUS2019@(output1)",
				"sourceDE2020 compose(mapParameter(",
				"          market = 'DE',",
				"          year = '2020'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          AverageHoldingPeriod",
				"     ),",
				"     composition: 'averageHoldingPeriodSource') ~> flowletDE2020@(output1)",
				"sourceCN2020 compose(mapParameter(",
				"          market = 'CN',",
				"          year = '2020'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          AverageHoldingPeriod",
				"     ),",
				"     composition: 'averageHoldingPeriodSource') ~> flowletCN2020@(output1)",
				"sourceUK2020 compose(mapParameter(",
				"          market = 'UK',",
				"          year = '2020'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          AverageHoldingPeriod",
				"     ),",
				"     composition: 'averageHoldingPeriodSource') ~> flowletUK2020@(output1)",
				"sourceUS2020 compose(mapParameter(",
				"          market = 'US',",
				"          year = '2020'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          AverageHoldingPeriod",
				"     ),",
				"     composition: 'averageHoldingPeriodSource') ~> flowletUS2020@(output1)",
				"flowletDE2019@output1, flowletCN2019@output1, flowletUK2019@output1, flowletUS2019@output1, flowletDE2020@output1, flowletCN2020@output1, flowletUK2020@output1, flowletUS2020@output1, flowletDE2021@output1, flowletCN2021@output1, flowletUK2021@output1, flowletUS2021@output1 union(byName: true)~> UnionAllData",
				"UnionAllData derive(data = @(market, year, model, male, female, all)) ~> CreateDataArray",
				"CreateDataArray aggregate(groupBy(dummy = 1),",
				"     data = collect(data)) ~> AggregateToArray",
				"AggregateToArray select(mapColumn(",
				"          data",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectDataArray",
				"sourceDE2021 compose(mapParameter(",
				"          market = 'DE',",
				"          year = '2021'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          AverageHoldingPeriod",
				"     ),",
				"     composition: 'averageHoldingPeriodSource') ~> flowletDE2021@(output1)",
				"sourceCN2021 compose(mapParameter(",
				"          market = 'CN',",
				"          year = '2021'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          AverageHoldingPeriod",
				"     ),",
				"     composition: 'averageHoldingPeriodSource') ~> flowletCN2021@(output1)",
				"sourceUK2021 compose(mapParameter(",
				"          market = 'UK',",
				"          year = '2021'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          AverageHoldingPeriod",
				"     ),",
				"     composition: 'averageHoldingPeriodSource') ~> flowletUK2021@(output1)",
				"sourceUS2021 compose(mapParameter(",
				"          market = 'US',",
				"          year = '2021'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          AverageHoldingPeriod",
				"     ),",
				"     composition: 'averageHoldingPeriodSource') ~> flowletUS2021@(output1)",
				"SelectDataArray sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'json',",
				"     fileSystem: 'output',",
				"     partitionFileNames:['averageHoldingPeriodChart.json'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}