{
	"name": "averageHoldingPeriod",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CAP_2019",
						"type": "DatasetReference"
					},
					"name": "source2019"
				},
				{
					"dataset": {
						"referenceName": "CAP_2020",
						"type": "DatasetReference"
					},
					"name": "source2020"
				},
				{
					"dataset": {
						"referenceName": "CAP_2021",
						"type": "DatasetReference"
					},
					"name": "source2021"
				},
				{
					"dataset": {
						"referenceName": "CAP_2022",
						"type": "DatasetReference"
					},
					"name": "source2022"
				},
				{
					"dataset": {
						"referenceName": "CAP_2023",
						"type": "DatasetReference"
					},
					"name": "source2023"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "collectCap2019",
					"flowlet": {
						"referenceName": "collectCapData",
						"type": "DataFlowReference",
						"parameters": {
							"market": "$market",
							"year": "'2019'"
						}
					}
				},
				{
					"name": "collectCap2020",
					"flowlet": {
						"referenceName": "collectCapData",
						"type": "DataFlowReference",
						"parameters": {
							"market": "$market",
							"year": "'2020'"
						}
					}
				},
				{
					"name": "collectCap2021",
					"flowlet": {
						"referenceName": "collectCapData",
						"type": "DataFlowReference",
						"parameters": {
							"market": "$market",
							"year": "'2021'"
						}
					}
				},
				{
					"name": "collectCap2022",
					"flowlet": {
						"referenceName": "collectCapData",
						"type": "DataFlowReference",
						"parameters": {
							"market": "toString($market)",
							"year": "'2022'"
						}
					}
				},
				{
					"name": "collectCap2023",
					"flowlet": {
						"referenceName": "collectCapData",
						"type": "DataFlowReference",
						"parameters": {
							"market": "$market",
							"year": "'2023'"
						}
					}
				},
				{
					"name": "UnionAllData"
				},
				{
					"name": "CreateDataArray"
				},
				{
					"name": "AggregateToArray"
				},
				{
					"name": "SelectDataArray"
				}
			],
			"scriptLines": [
				"parameters{",
				"     market as string",
				"}",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          MeanKmPerYear as double,",
				"          {kmPerYear=0} as double,",
				"          {kmPerYear=500} as double,",
				"          {kmPerYear=1000} as double,",
				"          {kmPerYear=1500} as double,",
				"          {kmPerYear=2000} as double,",
				"          {kmPerYear=2500} as double,",
				"          {kmPerYear=3000} as double,",
				"          {kmPerYear=3500} as double,",
				"          {kmPerYear=4000} as double,",
				"          {kmPerYear=4500} as double,",
				"          {kmPerYear=5000} as double,",
				"          {kmPerYear=5500} as double,",
				"          {kmPerYear=6000} as double,",
				"          {kmPerYear=6500} as double,",
				"          {kmPerYear=7000} as double,",
				"          {kmPerYear=7500} as double,",
				"          {kmPerYear=8000} as double,",
				"          {kmPerYear=8500} as double,",
				"          {kmPerYear=9000} as double,",
				"          {kmPerYear=9500} as double,",
				"          {kmPerYear=10000} as double,",
				"          {kmPerYear=10500} as double,",
				"          {kmPerYear=11000} as double,",
				"          {kmPerYear=11500} as double,",
				"          {kmPerYear=12000} as double,",
				"          {kmPerYear=12500} as double,",
				"          {kmPerYear=13000} as double,",
				"          {kmPerYear=13500} as double,",
				"          {kmPerYear=14000} as double,",
				"          {kmPerYear=14500} as double,",
				"          {kmPerYear=15000} as double,",
				"          {kmPerYear=15500} as double,",
				"          {kmPerYear=16000} as double,",
				"          {kmPerYear=16500} as double,",
				"          {kmPerYear=17000} as double,",
				"          {kmPerYear=17500} as double,",
				"          {kmPerYear=18000} as double,",
				"          {kmPerYear=18500} as double,",
				"          {kmPerYear=19000} as double,",
				"          {kmPerYear=19500} as double,",
				"          {kmPerYear=20000} as double,",
				"          {kmPerYear=20500} as double,",
				"          {kmPerYear=21000} as double,",
				"          {kmPerYear=21500} as double,",
				"          {kmPerYear=22000} as double,",
				"          {kmPerYear=22500} as double,",
				"          {kmPerYear=23000} as double,",
				"          {kmPerYear=23500} as double,",
				"          {kmPerYear=24000} as double,",
				"          {kmPerYear=24500} as double,",
				"          {kmPerYear=25000} as double,",
				"          {kmPerYear=25500} as double,",
				"          {kmPerYear=26000} as double,",
				"          {kmPerYear=26500} as double,",
				"          {kmPerYear=27000} as double,",
				"          {kmPerYear=27500} as double,",
				"          {kmPerYear=28000} as double,",
				"          {kmPerYear=28500} as double,",
				"          {kmPerYear=29000} as double,",
				"          {kmPerYear=29500} as double,",
				"          {kmPerYear=30000} as double,",
				"          {kmPerYear=30500} as double,",
				"          {kmPerYear=31000} as double,",
				"          {kmPerYear=31500} as double,",
				"          {kmPerYear=32000} as double,",
				"          {kmPerYear=32500} as double,",
				"          {kmPerYear=33000} as double,",
				"          {kmPerYear=33500} as double,",
				"          {kmPerYear=34000} as double,",
				"          {kmPerYear=34500} as double,",
				"          {kmPerYear=35000} as double,",
				"          {kmPerYear=35500} as double,",
				"          {kmPerYear=36000} as double,",
				"          {kmPerYear=36500} as double,",
				"          {kmPerYear=37000} as double,",
				"          {kmPerYear=37500} as double,",
				"          {kmPerYear=38000} as double,",
				"          {kmPerYear=38500} as double,",
				"          {kmPerYear=39000} as double,",
				"          {kmPerYear=39500} as double,",
				"          {kmPerYear=40000} as double,",
				"          {kmPerYear=40500} as double,",
				"          {kmPerYear=41000} as double,",
				"          {kmPerYear=41500} as double,",
				"          {kmPerYear=42000} as double,",
				"          {kmPerYear=42500} as double,",
				"          {kmPerYear=43000} as double,",
				"          {kmPerYear=43500} as double,",
				"          {kmPerYear=44000} as double,",
				"          {kmPerYear=44500} as double,",
				"          {kmPerYear=45000} as double,",
				"          {kmPerYear=45500} as double,",
				"          {kmPerYear=46000} as double,",
				"          {kmPerYear=46500} as double,",
				"          {kmPerYear=47000} as double,",
				"          {kmPerYear=47500} as double,",
				"          {kmPerYear=48000} as double,",
				"          {kmPerYear=48500} as double,",
				"          {kmPerYear=49000} as double,",
				"          {kmPerYear=49500} as double,",
				"          {kmPerYear=50000} as double,",
				"          Landgemeinde as double,",
				"          Kleinstadt as double,",
				"          Mittelstadt as double,",
				"          {Gro�stadt} as double,",
				"          {Baden-Württemberg} as double,",
				"          Bayern as double,",
				"          Berlin as double,",
				"          Brandenburg as double,",
				"          Bremen as double,",
				"          Hamburg as double,",
				"          Hessen as double,",
				"          {Mecklenburg-Vorpommern} as double,",
				"          Niedersachsen as double,",
				"          {Nordrhein-Westfalen} as double,",
				"          {Rheinland-Pfalz} as double,",
				"          Saarland as double,",
				"          Sachsen as double,",
				"          {Sachsen-Anhalt} as double,",
				"          {Schleswig-Holstein} as double,",
				"          {Thüringen} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2019",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          Landgemeinde as double,",
				"          Kleinstadt as double,",
				"          Mittelstadt as double,",
				"          {Gro�stadt} as double,",
				"          {Baden-Württemberg} as double,",
				"          Bayern as double,",
				"          Berlin as double,",
				"          Brandenburg as double,",
				"          Bremen as double,",
				"          Hamburg as double,",
				"          Hessen as double,",
				"          {Mecklenburg-Vorpommern} as double,",
				"          Niedersachsen as double,",
				"          {Nordrhein-Westfalen} as double,",
				"          {Rheinland-Pfalz} as double,",
				"          Saarland as double,",
				"          Sachsen as double,",
				"          {Sachsen-Anhalt} as double,",
				"          {Schleswig-Holstein} as double,",
				"          {Thüringen} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2020",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          MeanKmPerYear as double,",
				"          {kmPerYear=0} as double,",
				"          {kmPerYear=500} as double,",
				"          {kmPerYear=1000} as double,",
				"          {kmPerYear=1500} as double,",
				"          {kmPerYear=2000} as double,",
				"          {kmPerYear=2500} as double,",
				"          {kmPerYear=3000} as double,",
				"          {kmPerYear=3500} as double,",
				"          {kmPerYear=4000} as double,",
				"          {kmPerYear=4500} as double,",
				"          {kmPerYear=5000} as double,",
				"          {kmPerYear=5500} as double,",
				"          {kmPerYear=6000} as double,",
				"          {kmPerYear=6500} as double,",
				"          {kmPerYear=7000} as double,",
				"          {kmPerYear=7500} as double,",
				"          {kmPerYear=8000} as double,",
				"          {kmPerYear=8500} as double,",
				"          {kmPerYear=9000} as double,",
				"          {kmPerYear=9500} as double,",
				"          {kmPerYear=10000} as double,",
				"          {kmPerYear=10500} as double,",
				"          {kmPerYear=11000} as double,",
				"          {kmPerYear=11500} as double,",
				"          {kmPerYear=12000} as double,",
				"          {kmPerYear=12500} as double,",
				"          {kmPerYear=13000} as double,",
				"          {kmPerYear=13500} as double,",
				"          {kmPerYear=14000} as double,",
				"          {kmPerYear=14500} as double,",
				"          {kmPerYear=15000} as double,",
				"          {kmPerYear=15500} as double,",
				"          {kmPerYear=16000} as double,",
				"          {kmPerYear=16500} as double,",
				"          {kmPerYear=17000} as double,",
				"          {kmPerYear=17500} as double,",
				"          {kmPerYear=18000} as double,",
				"          {kmPerYear=18500} as double,",
				"          {kmPerYear=19000} as double,",
				"          {kmPerYear=19500} as double,",
				"          {kmPerYear=20000} as double,",
				"          {kmPerYear=20500} as double,",
				"          {kmPerYear=21000} as double,",
				"          {kmPerYear=21500} as double,",
				"          {kmPerYear=22000} as double,",
				"          {kmPerYear=22500} as double,",
				"          {kmPerYear=23000} as double,",
				"          {kmPerYear=23500} as double,",
				"          {kmPerYear=24000} as double,",
				"          {kmPerYear=24500} as double,",
				"          {kmPerYear=25000} as double,",
				"          {kmPerYear=25500} as double,",
				"          {kmPerYear=26000} as double,",
				"          {kmPerYear=26500} as double,",
				"          {kmPerYear=27000} as double,",
				"          {kmPerYear=27500} as double,",
				"          {kmPerYear=28000} as double,",
				"          {kmPerYear=28500} as double,",
				"          {kmPerYear=29000} as double,",
				"          {kmPerYear=29500} as double,",
				"          {kmPerYear=30000} as double,",
				"          {kmPerYear=30500} as double,",
				"          {kmPerYear=31000} as double,",
				"          {kmPerYear=31500} as double,",
				"          {kmPerYear=32000} as double,",
				"          {kmPerYear=32500} as double,",
				"          {kmPerYear=33000} as double,",
				"          {kmPerYear=33500} as double,",
				"          {kmPerYear=34000} as double,",
				"          {kmPerYear=34500} as double,",
				"          {kmPerYear=35000} as double,",
				"          {kmPerYear=35500} as double,",
				"          {kmPerYear=36000} as double,",
				"          {kmPerYear=36500} as double,",
				"          {kmPerYear=37000} as double,",
				"          {kmPerYear=37500} as double,",
				"          {kmPerYear=38000} as double,",
				"          {kmPerYear=38500} as double,",
				"          {kmPerYear=39000} as double,",
				"          {kmPerYear=39500} as double,",
				"          {kmPerYear=40000} as double,",
				"          {kmPerYear=40500} as double,",
				"          {kmPerYear=41000} as double,",
				"          {kmPerYear=41500} as double,",
				"          {kmPerYear=42000} as double,",
				"          {kmPerYear=42500} as double,",
				"          {kmPerYear=43000} as double,",
				"          {kmPerYear=43500} as double,",
				"          {kmPerYear=44000} as double,",
				"          {kmPerYear=44500} as double,",
				"          {kmPerYear=45000} as double,",
				"          {kmPerYear=45500} as double,",
				"          {kmPerYear=46000} as double,",
				"          {kmPerYear=46500} as double,",
				"          {kmPerYear=47000} as double,",
				"          {kmPerYear=47500} as double,",
				"          {kmPerYear=48000} as double,",
				"          {kmPerYear=48500} as double,",
				"          {kmPerYear=49000} as double,",
				"          {kmPerYear=49500} as double,",
				"          {kmPerYear=50000} as double,",
				"          Landgemeinde as double,",
				"          Kleinstadt as double,",
				"          Mittelstadt as double,",
				"          {Gro�stadt} as double,",
				"          {Baden-Württemberg} as double,",
				"          Bayern as double,",
				"          Berlin as double,",
				"          Brandenburg as double,",
				"          Bremen as double,",
				"          Hamburg as double,",
				"          Hessen as double,",
				"          {Mecklenburg-Vorpommern} as double,",
				"          Niedersachsen as double,",
				"          {Nordrhein-Westfalen} as double,",
				"          {Rheinland-Pfalz} as double,",
				"          Saarland as double,",
				"          Sachsen as double,",
				"          {Sachsen-Anhalt} as double,",
				"          {Schleswig-Holstein} as double,",
				"          {Thüringen} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2021",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          MeanKmPerYear as double,",
				"          {kmPerYear=0} as double,",
				"          {kmPerYear=500} as double,",
				"          {kmPerYear=1000} as double,",
				"          {kmPerYear=1500} as double,",
				"          {kmPerYear=2000} as double,",
				"          {kmPerYear=2500} as double,",
				"          {kmPerYear=3000} as double,",
				"          {kmPerYear=3500} as double,",
				"          {kmPerYear=4000} as double,",
				"          {kmPerYear=4500} as double,",
				"          {kmPerYear=5000} as double,",
				"          {kmPerYear=5500} as double,",
				"          {kmPerYear=6000} as double,",
				"          {kmPerYear=6500} as double,",
				"          {kmPerYear=7000} as double,",
				"          {kmPerYear=7500} as double,",
				"          {kmPerYear=8000} as double,",
				"          {kmPerYear=8500} as double,",
				"          {kmPerYear=9000} as double,",
				"          {kmPerYear=9500} as double,",
				"          {kmPerYear=10000} as double,",
				"          {kmPerYear=10500} as double,",
				"          {kmPerYear=11000} as double,",
				"          {kmPerYear=11500} as double,",
				"          {kmPerYear=12000} as double,",
				"          {kmPerYear=12500} as double,",
				"          {kmPerYear=13000} as double,",
				"          {kmPerYear=13500} as double,",
				"          {kmPerYear=14000} as double,",
				"          {kmPerYear=14500} as double,",
				"          {kmPerYear=15000} as double,",
				"          {kmPerYear=15500} as double,",
				"          {kmPerYear=16000} as double,",
				"          {kmPerYear=16500} as double,",
				"          {kmPerYear=17000} as double,",
				"          {kmPerYear=17500} as double,",
				"          {kmPerYear=18000} as double,",
				"          {kmPerYear=18500} as double,",
				"          {kmPerYear=19000} as double,",
				"          {kmPerYear=19500} as double,",
				"          {kmPerYear=20000} as double,",
				"          {kmPerYear=20500} as double,",
				"          {kmPerYear=21000} as double,",
				"          {kmPerYear=21500} as double,",
				"          {kmPerYear=22000} as double,",
				"          {kmPerYear=22500} as double,",
				"          {kmPerYear=23000} as double,",
				"          {kmPerYear=23500} as double,",
				"          {kmPerYear=24000} as double,",
				"          {kmPerYear=24500} as double,",
				"          {kmPerYear=25000} as double,",
				"          {kmPerYear=25500} as double,",
				"          {kmPerYear=26000} as double,",
				"          {kmPerYear=26500} as double,",
				"          {kmPerYear=27000} as double,",
				"          {kmPerYear=27500} as double,",
				"          {kmPerYear=28000} as double,",
				"          {kmPerYear=28500} as double,",
				"          {kmPerYear=29000} as double,",
				"          {kmPerYear=29500} as double,",
				"          {kmPerYear=30000} as double,",
				"          {kmPerYear=30500} as double,",
				"          {kmPerYear=31000} as double,",
				"          {kmPerYear=31500} as double,",
				"          {kmPerYear=32000} as double,",
				"          {kmPerYear=32500} as double,",
				"          {kmPerYear=33000} as double,",
				"          {kmPerYear=33500} as double,",
				"          {kmPerYear=34000} as double,",
				"          {kmPerYear=34500} as double,",
				"          {kmPerYear=35000} as double,",
				"          {kmPerYear=35500} as double,",
				"          {kmPerYear=36000} as double,",
				"          {kmPerYear=36500} as double,",
				"          {kmPerYear=37000} as double,",
				"          {kmPerYear=37500} as double,",
				"          {kmPerYear=38000} as double,",
				"          {kmPerYear=38500} as double,",
				"          {kmPerYear=39000} as double,",
				"          {kmPerYear=39500} as double,",
				"          {kmPerYear=40000} as double,",
				"          {kmPerYear=40500} as double,",
				"          {kmPerYear=41000} as double,",
				"          {kmPerYear=41500} as double,",
				"          {kmPerYear=42000} as double,",
				"          {kmPerYear=42500} as double,",
				"          {kmPerYear=43000} as double,",
				"          {kmPerYear=43500} as double,",
				"          {kmPerYear=44000} as double,",
				"          {kmPerYear=44500} as double,",
				"          {kmPerYear=45000} as double,",
				"          {kmPerYear=45500} as double,",
				"          {kmPerYear=46000} as double,",
				"          {kmPerYear=46500} as double,",
				"          {kmPerYear=47000} as double,",
				"          {kmPerYear=47500} as double,",
				"          {kmPerYear=48000} as double,",
				"          {kmPerYear=48500} as double,",
				"          {kmPerYear=49000} as double,",
				"          {kmPerYear=49500} as double,",
				"          {kmPerYear=50000} as double,",
				"          Landgemeinde as double,",
				"          Kleinstadt as double,",
				"          Mittelstadt as double,",
				"          {Gro�stadt} as double,",
				"          {Baden-Württemberg} as double,",
				"          Bayern as double,",
				"          Berlin as double,",
				"          Brandenburg as double,",
				"          Bremen as double,",
				"          Hamburg as double,",
				"          Hessen as double,",
				"          {Mecklenburg-Vorpommern} as double,",
				"          Niedersachsen as double,",
				"          {Nordrhein-Westfalen} as double,",
				"          {Rheinland-Pfalz} as double,",
				"          Saarland as double,",
				"          Sachsen as double,",
				"          {Sachsen-Anhalt} as double,",
				"          {Schleswig-Holstein} as double,",
				"          {Thüringen} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2022",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          AverageExistingCustomerAge as double,",
				"          {ExistingCustomerAge=0-30} as double,",
				"          {ExistingCustomerAge=30-50} as double,",
				"          {ExistingCustomerAge=50-100} as double,",
				"          ShareOfMen as double,",
				"          ShareOfWomen as double,",
				"          AverageHoldingPeriod as double,",
				"          AverageNumberOfPorscheInPossession as double,",
				"          {PorscheInPossession=1} as double,",
				"          {PorscheInPossession=2} as double,",
				"          {PorscheInPossession=3} as double,",
				"          {PorscheInPossession>=4} as double,",
				"          FirstTimeBuyerRate as double,",
				"          ChurnRate as double,",
				"          ConquestRate as double,",
				"          MeanKmPerYear as double,",
				"          {kmPerYear=0} as double,",
				"          {kmPerYear=500} as double,",
				"          {kmPerYear=1000} as double,",
				"          {kmPerYear=1500} as double,",
				"          {kmPerYear=2000} as double,",
				"          {kmPerYear=2500} as double,",
				"          {kmPerYear=3000} as double,",
				"          {kmPerYear=3500} as double,",
				"          {kmPerYear=4000} as double,",
				"          {kmPerYear=4500} as double,",
				"          {kmPerYear=5000} as double,",
				"          {kmPerYear=5500} as double,",
				"          {kmPerYear=6000} as double,",
				"          {kmPerYear=6500} as double,",
				"          {kmPerYear=7000} as double,",
				"          {kmPerYear=7500} as double,",
				"          {kmPerYear=8000} as double,",
				"          {kmPerYear=8500} as double,",
				"          {kmPerYear=9000} as double,",
				"          {kmPerYear=9500} as double,",
				"          {kmPerYear=10000} as double,",
				"          {kmPerYear=10500} as double,",
				"          {kmPerYear=11000} as double,",
				"          {kmPerYear=11500} as double,",
				"          {kmPerYear=12000} as double,",
				"          {kmPerYear=12500} as double,",
				"          {kmPerYear=13000} as double,",
				"          {kmPerYear=13500} as double,",
				"          {kmPerYear=14000} as double,",
				"          {kmPerYear=14500} as double,",
				"          {kmPerYear=15000} as double,",
				"          {kmPerYear=15500} as double,",
				"          {kmPerYear=16000} as double,",
				"          {kmPerYear=16500} as double,",
				"          {kmPerYear=17000} as double,",
				"          {kmPerYear=17500} as double,",
				"          {kmPerYear=18000} as double,",
				"          {kmPerYear=18500} as double,",
				"          {kmPerYear=19000} as double,",
				"          {kmPerYear=19500} as double,",
				"          {kmPerYear=20000} as double,",
				"          {kmPerYear=20500} as double,",
				"          {kmPerYear=21000} as double,",
				"          {kmPerYear=21500} as double,",
				"          {kmPerYear=22000} as double,",
				"          {kmPerYear=22500} as double,",
				"          {kmPerYear=23000} as double,",
				"          {kmPerYear=23500} as double,",
				"          {kmPerYear=24000} as double,",
				"          {kmPerYear=24500} as double,",
				"          {kmPerYear=25000} as double,",
				"          {kmPerYear=25500} as double,",
				"          {kmPerYear=26000} as double,",
				"          {kmPerYear=26500} as double,",
				"          {kmPerYear=27000} as double,",
				"          {kmPerYear=27500} as double,",
				"          {kmPerYear=28000} as double,",
				"          {kmPerYear=28500} as double,",
				"          {kmPerYear=29000} as double,",
				"          {kmPerYear=29500} as double,",
				"          {kmPerYear=30000} as double,",
				"          {kmPerYear=30500} as double,",
				"          {kmPerYear=31000} as double,",
				"          {kmPerYear=31500} as double,",
				"          {kmPerYear=32000} as double,",
				"          {kmPerYear=32500} as double,",
				"          {kmPerYear=33000} as double,",
				"          {kmPerYear=33500} as double,",
				"          {kmPerYear=34000} as double,",
				"          {kmPerYear=34500} as double,",
				"          {kmPerYear=35000} as double,",
				"          {kmPerYear=35500} as double,",
				"          {kmPerYear=36000} as double,",
				"          {kmPerYear=36500} as double,",
				"          {kmPerYear=37000} as double,",
				"          {kmPerYear=37500} as double,",
				"          {kmPerYear=38000} as double,",
				"          {kmPerYear=38500} as double,",
				"          {kmPerYear=39000} as double,",
				"          {kmPerYear=39500} as double,",
				"          {kmPerYear=40000} as double,",
				"          {kmPerYear=40500} as double,",
				"          {kmPerYear=41000} as double,",
				"          {kmPerYear=41500} as double,",
				"          {kmPerYear=42000} as double,",
				"          {kmPerYear=42500} as double,",
				"          {kmPerYear=43000} as double,",
				"          {kmPerYear=43500} as double,",
				"          {kmPerYear=44000} as double,",
				"          {kmPerYear=44500} as double,",
				"          {kmPerYear=45000} as double,",
				"          {kmPerYear=45500} as double,",
				"          {kmPerYear=46000} as double,",
				"          {kmPerYear=46500} as double,",
				"          {kmPerYear=47000} as double,",
				"          {kmPerYear=47500} as double,",
				"          {kmPerYear=48000} as double,",
				"          {kmPerYear=48500} as double,",
				"          {kmPerYear=49000} as double,",
				"          {kmPerYear=49500} as double,",
				"          {kmPerYear=50000} as double,",
				"          Landgemeinde as double,",
				"          Kleinstadt as double,",
				"          Mittelstadt as double,",
				"          {Gro�stadt} as double,",
				"          {Baden-Württemberg} as double,",
				"          Bayern as double,",
				"          Berlin as double,",
				"          Brandenburg as double,",
				"          Bremen as double,",
				"          Hamburg as double,",
				"          Hessen as double,",
				"          {Mecklenburg-Vorpommern} as double,",
				"          Niedersachsen as double,",
				"          {Nordrhein-Westfalen} as double,",
				"          {Rheinland-Pfalz} as double,",
				"          Saarland as double,",
				"          Sachsen as double,",
				"          {Sachsen-Anhalt} as double,",
				"          {Schleswig-Holstein} as double,",
				"          {Thüringen} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2023",
				"source2019 compose(mapParameter(",
				"          market = $market,",
				"          year = '2019'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          value = GroupName",
				"     ),",
				"     composition: 'collectCapData') ~> collectCap2019@(output1)",
				"source2020 compose(mapParameter(",
				"          market = $market,",
				"          year = '2020'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          value = GroupName",
				"     ),",
				"     composition: 'collectCapData') ~> collectCap2020@(output1)",
				"source2021 compose(mapParameter(",
				"          market = $market,",
				"          year = '2021'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          value = GroupName",
				"     ),",
				"     composition: 'collectCapData') ~> collectCap2021@(output1)",
				"source2022 compose(mapParameter(",
				"          market = toString($market),",
				"          year = '2022'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          value = GroupName",
				"     ),",
				"     composition: 'collectCapData') ~> collectCap2022@(output1)",
				"source2023 compose(mapParameter(",
				"          market = $market,",
				"          year = '2023'",
				"     ),",
				"     mapColumn(",
				"          GroupName,",
				"          GroupType,",
				"          value = GroupName",
				"     ),",
				"     composition: 'collectCapData') ~> collectCap2023@(output1)",
				"collectCap2019@output1, collectCap2020@output1, collectCap2021@output1, collectCap2022@output1, collectCap2023@output1 union(byName: true)~> UnionAllData",
				"UnionAllData derive(data = @(market, year, model, male, female, all)) ~> CreateDataArray",
				"CreateDataArray aggregate(groupBy(dummy = 1),",
				"     data = collect(data)) ~> AggregateToArray",
				"AggregateToArray select(mapColumn(",
				"          data",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectDataArray",
				"SelectDataArray sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'json',",
				"     fileSystem: 'output',",
				"     partitionFileNames:[(concat('averageHoldingPeriodChart', $market, '.json'))],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}