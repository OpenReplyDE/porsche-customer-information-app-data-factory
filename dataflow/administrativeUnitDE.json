{
	"name": "administrativeUnitDE",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CAP_DE_2019",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "CAP_DE_2020",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "CAP_DE_2021",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "CAP_DE_2022",
						"type": "DatasetReference"
					},
					"name": "source4"
				},
				{
					"dataset": {
						"referenceName": "CAP_DE_2023",
						"type": "DatasetReference"
					},
					"name": "source5"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "SplitModelTypes1"
				},
				{
					"name": "DeriveGenderColumns1"
				},
				{
					"name": "DeriveEngineColumns1"
				},
				{
					"name": "SplitModelTypes2"
				},
				{
					"name": "DeriveGenderColumns2"
				},
				{
					"name": "DeriveEngineColumns2"
				},
				{
					"name": "SplitModelTypes3"
				},
				{
					"name": "DeriveGenderColumns3"
				},
				{
					"name": "DeriveEngineColumns3"
				},
				{
					"name": "SplitModelTypes4"
				},
				{
					"name": "DeriveGenderColumns4"
				},
				{
					"name": "DeriveEngineColumns4"
				},
				{
					"name": "SplitModelTypes5"
				},
				{
					"name": "DeriveGenderColumns5"
				},
				{
					"name": "DeriveEngineColumns5"
				},
				{
					"name": "AggregateGenderData1"
				},
				{
					"name": "AggregateGenderData2"
				},
				{
					"name": "AggregateGenderData3"
				},
				{
					"name": "AggregateGenderData4"
				},
				{
					"name": "AggregateGenderData5"
				},
				{
					"name": "UnionAllData"
				},
				{
					"name": "CreateDataArray"
				},
				{
					"name": "AggregateToArray"
				},
				{
					"name": "SelectDataArray"
				}
			],
			"scriptLines": [
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          {Baden-Württemberg} as double,",
				"          Bayern as double,",
				"          Berlin as double,",
				"          Brandenburg as double,",
				"          Bremen as double,",
				"          Hamburg as double,",
				"          Hessen as double,",
				"          {Mecklenburg-Vorpommern} as double,",
				"          Niedersachsen as double,",
				"          {Nordrhein-Westfalen} as double,",
				"          {Rheinland-Pfalz} as double,",
				"          Saarland as double,",
				"          Sachsen as double,",
				"          {Sachsen-Anhalt} as double,",
				"          {Schleswig-Holstein} as double,",
				"          {Thüringen} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          {Baden-Württemberg} as double,",
				"          Bayern as double,",
				"          Berlin as double,",
				"          Brandenburg as double,",
				"          Bremen as double,",
				"          Hamburg as double,",
				"          Hessen as double,",
				"          {Mecklenburg-Vorpommern} as double,",
				"          Niedersachsen as double,",
				"          {Nordrhein-Westfalen} as double,",
				"          {Rheinland-Pfalz} as double,",
				"          Saarland as double,",
				"          Sachsen as double,",
				"          {Sachsen-Anhalt} as double,",
				"          {Schleswig-Holstein} as double,",
				"          {Thüringen} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          {Baden-Württemberg} as double,",
				"          Bayern as double,",
				"          Berlin as double,",
				"          Brandenburg as double,",
				"          Bremen as double,",
				"          Hamburg as double,",
				"          Hessen as double,",
				"          {Mecklenburg-Vorpommern} as double,",
				"          Niedersachsen as double,",
				"          {Nordrhein-Westfalen} as double,",
				"          {Rheinland-Pfalz} as double,",
				"          Saarland as double,",
				"          Sachsen as double,",
				"          {Sachsen-Anhalt} as double,",
				"          {Schleswig-Holstein} as double,",
				"          {Thüringen} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source3",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          {Baden-Württemberg} as double,",
				"          Bayern as double,",
				"          Berlin as double,",
				"          Brandenburg as double,",
				"          Bremen as double,",
				"          Hamburg as double,",
				"          Hessen as double,",
				"          {Mecklenburg-Vorpommern} as double,",
				"          Niedersachsen as double,",
				"          {Nordrhein-Westfalen} as double,",
				"          {Rheinland-Pfalz} as double,",
				"          Saarland as double,",
				"          Sachsen as double,",
				"          {Sachsen-Anhalt} as double,",
				"          {Schleswig-Holstein} as double,",
				"          {Thüringen} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source4",
				"source(output(",
				"          GroupName as string,",
				"          GroupType as string,",
				"          {Baden-Württemberg} as double,",
				"          Bayern as double,",
				"          Berlin as double,",
				"          Brandenburg as double,",
				"          Bremen as double,",
				"          Hamburg as double,",
				"          Hessen as double,",
				"          {Mecklenburg-Vorpommern} as double,",
				"          Niedersachsen as double,",
				"          {Nordrhein-Westfalen} as double,",
				"          {Rheinland-Pfalz} as double,",
				"          Saarland as double,",
				"          Sachsen as double,",
				"          {Sachsen-Anhalt} as double,",
				"          {Schleswig-Holstein} as double,",
				"          {Thüringen} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source5",
				"source1 split(GroupType == 'Model/Gender',",
				"     GroupType == 'Model/Engine',",
				"     disjoint: false) ~> SplitModelTypes1@(ModelGender, ModelEngine)",
				"SplitModelTypes1@ModelGender derive(market = 'DE',",
				"          year = '2019',",
				"          model = iif(GroupName == 'Porsche/Female' || GroupName == 'Porsche/Male', 'All Models',",
				"        iif(locate('/', GroupName) > 0, ",
				"            concat(trim(split(GroupName, '/')[1]), ' All'),",
				"            GroupName",
				"        )",
				"    ),",
				"          male_baden_wurttemberg = iif(endsWith(GroupName, '/Male'), toDouble({Baden-Württemberg}), toDouble(0)),",
				"          male_bayern = iif(endsWith(GroupName, '/Male'), toDouble(Bayern), toDouble(0)),",
				"          male_berlin = iif(endsWith(GroupName, '/Male'), toDouble(Berlin), toDouble(0)),",
				"          male_brandenburg = iif(endsWith(GroupName, '/Male'), toDouble(Brandenburg), toDouble(0)),",
				"          male_bremen = iif(endsWith(GroupName, '/Male'), toDouble(Bremen), toDouble(0)),",
				"          male_hamburg = iif(endsWith(GroupName, '/Male'), toDouble(Hamburg), toDouble(0)),",
				"          male_hessen = iif(endsWith(GroupName, '/Male'), toDouble(Hessen), toDouble(0)),",
				"          male_mecklenburg_vorpommern = iif(endsWith(GroupName, '/Male'), toDouble({Mecklenburg-Vorpommern}), toDouble(0)),",
				"          male_niedersachsen = iif(endsWith(GroupName, '/Male'), toDouble(Niedersachsen), toDouble(0)),",
				"          male_nordrhein_westfalen = iif(endsWith(GroupName, '/Male'), toDouble({Nordrhein-Westfalen}), toDouble(0)),",
				"          male_rheinland_pfalz = iif(endsWith(GroupName, '/Male'), toDouble({Rheinland-Pfalz}), toDouble(0)),",
				"          male_saarland = iif(endsWith(GroupName, '/Male'), toDouble(Saarland), toDouble(0)),",
				"          male_sachsen = iif(endsWith(GroupName, '/Male'), toDouble(Sachsen), toDouble(0)),",
				"          male_sachsen_anhalt = iif(endsWith(GroupName, '/Male'), toDouble({Sachsen-Anhalt}), toDouble(0)),",
				"          male_schleswig_holstein = iif(endsWith(GroupName, '/Male'), toDouble({Schleswig-Holstein}), toDouble(0)),",
				"          male_thuringen = iif(endsWith(GroupName, '/Male'), toDouble({Thüringen}), toDouble(0)),",
				"          female_baden_wurttemberg = iif(endsWith(GroupName, '/Female'), toDouble({Baden-Württemberg}), toDouble(0)),",
				"          female_bayern = iif(endsWith(GroupName, '/Female'), toDouble(Bayern), toDouble(0)),",
				"          female_berlin = iif(endsWith(GroupName, '/Female'), toDouble(Berlin), toDouble(0)),",
				"          female_brandenburg = iif(endsWith(GroupName, '/Female'), toDouble(Brandenburg), toDouble(0)),",
				"          female_bremen = iif(endsWith(GroupName, '/Female'), toDouble(Bremen), toDouble(0)),",
				"          female_hamburg = iif(endsWith(GroupName, '/Female'), toDouble(Hamburg), toDouble(0)),",
				"          female_hessen = iif(endsWith(GroupName, '/Female'), toDouble(Hessen), toDouble(0)),",
				"          female_mecklenburg_vorpommern = iif(endsWith(GroupName, '/Female'), toDouble({Mecklenburg-Vorpommern}), toDouble(0)),",
				"          female_niedersachsen = iif(endsWith(GroupName, '/Female'), toDouble(Niedersachsen), toDouble(0)),",
				"          female_nordrhein_westfalen = iif(endsWith(GroupName, '/Female'), toDouble({Nordrhein-Westfalen}), toDouble(0)),",
				"          female_rheinland_pfalz = iif(endsWith(GroupName, '/Female'), toDouble({Rheinland-Pfalz}), toDouble(0)),",
				"          female_saarland = iif(endsWith(GroupName, '/Female'), toDouble(Saarland), toDouble(0)),",
				"          female_sachsen = iif(endsWith(GroupName, '/Female'), toDouble(Sachsen), toDouble(0)),",
				"          female_sachsen_anhalt = iif(endsWith(GroupName, '/Female'), toDouble({Sachsen-Anhalt}), toDouble(0)),",
				"          female_schleswig_holstein = iif(endsWith(GroupName, '/Female'), toDouble({Schleswig-Holstein}), toDouble(0)),",
				"          female_thuringen = iif(endsWith(GroupName, '/Female'), toDouble({Thüringen}), toDouble(0))) ~> DeriveGenderColumns1",
				"SplitModelTypes1@ModelEngine derive(market = 'DE',",
				"          year = '2019',",
				"          model = replace(GroupName, '/', ' '),",
				"          total_baden_wurttemberg = toDouble({Baden-Württemberg}),",
				"          total_bayern = toDouble(Bayern),",
				"          total_berlin = toDouble(Berlin),",
				"          total_brandenburg = toDouble(Brandenburg),",
				"          total_bremen = toDouble(Bremen),",
				"          total_hamburg = toDouble(Hamburg),",
				"          total_hessen = toDouble(Hessen),",
				"          total_mecklenburg_vorpommern = toDouble({Mecklenburg-Vorpommern}),",
				"          total_niedersachsen = toDouble(Niedersachsen),",
				"          total_nordrhein_westfalen = toDouble({Nordrhein-Westfalen}),",
				"          total_rheinland_pfalz = toDouble({Rheinland-Pfalz}),",
				"          total_saarland = toDouble(Saarland),",
				"          total_sachsen = toDouble(Sachsen),",
				"          total_sachsen_anhalt = toDouble({Sachsen-Anhalt}),",
				"          total_schleswig_holstein = toDouble({Schleswig-Holstein}),",
				"          total_thuringen = toDouble({Thüringen})) ~> DeriveEngineColumns1",
				"source2 split(GroupType == 'Model/Gender',",
				"     GroupType == 'Model/Engine',",
				"     disjoint: false) ~> SplitModelTypes2@(ModelGender, ModelEngine)",
				"SplitModelTypes2@ModelGender derive(market = 'DE',",
				"          year = '2020',",
				"          model = iif(GroupName == 'Porsche/Female' || GroupName == 'Porsche/Male', 'All Models',",
				"        iif(locate('/', GroupName) > 0, ",
				"            concat(trim(split(GroupName, '/')[1]), ' All'),",
				"            GroupName",
				"        )",
				"    ),",
				"          male_baden_wurttemberg = iif(endsWith(GroupName, '/Male'), toDouble({Baden-Württemberg}), toDouble(0)),",
				"          male_bayern = iif(endsWith(GroupName, '/Male'), toDouble(Bayern), toDouble(0)),",
				"          male_berlin = iif(endsWith(GroupName, '/Male'), toDouble(Berlin), toDouble(0)),",
				"          male_brandenburg = iif(endsWith(GroupName, '/Male'), toDouble(Brandenburg), toDouble(0)),",
				"          male_bremen = iif(endsWith(GroupName, '/Male'), toDouble(Bremen), toDouble(0)),",
				"          male_hamburg = iif(endsWith(GroupName, '/Male'), toDouble(Hamburg), toDouble(0)),",
				"          male_hessen = iif(endsWith(GroupName, '/Male'), toDouble(Hessen), toDouble(0)),",
				"          male_mecklenburg_vorpommern = iif(endsWith(GroupName, '/Male'), toDouble({Mecklenburg-Vorpommern}), toDouble(0)),",
				"          male_niedersachsen = iif(endsWith(GroupName, '/Male'), toDouble(Niedersachsen), toDouble(0)),",
				"          male_nordrhein_westfalen = iif(endsWith(GroupName, '/Male'), toDouble({Nordrhein-Westfalen}), toDouble(0)),",
				"          male_rheinland_pfalz = iif(endsWith(GroupName, '/Male'), toDouble({Rheinland-Pfalz}), toDouble(0)),",
				"          male_saarland = iif(endsWith(GroupName, '/Male'), toDouble(Saarland), toDouble(0)),",
				"          male_sachsen = iif(endsWith(GroupName, '/Male'), toDouble(Sachsen), toDouble(0)),",
				"          male_sachsen_anhalt = iif(endsWith(GroupName, '/Male'), toDouble({Sachsen-Anhalt}), toDouble(0)),",
				"          male_schleswig_holstein = iif(endsWith(GroupName, '/Male'), toDouble({Schleswig-Holstein}), toDouble(0)),",
				"          male_thuringen = iif(endsWith(GroupName, '/Male'), toDouble({Thüringen}), toDouble(0)),",
				"          female_baden_wurttemberg = iif(endsWith(GroupName, '/Female'), toDouble({Baden-Württemberg}), toDouble(0)),",
				"          female_bayern = iif(endsWith(GroupName, '/Female'), toDouble(Bayern), toDouble(0)),",
				"          female_berlin = iif(endsWith(GroupName, '/Female'), toDouble(Berlin), toDouble(0)),",
				"          female_brandenburg = iif(endsWith(GroupName, '/Female'), toDouble(Brandenburg), toDouble(0)),",
				"          female_bremen = iif(endsWith(GroupName, '/Female'), toDouble(Bremen), toDouble(0)),",
				"          female_hamburg = iif(endsWith(GroupName, '/Female'), toDouble(Hamburg), toDouble(0)),",
				"          female_hessen = iif(endsWith(GroupName, '/Female'), toDouble(Hessen), toDouble(0)),",
				"          female_mecklenburg_vorpommern = iif(endsWith(GroupName, '/Female'), toDouble({Mecklenburg-Vorpommern}), toDouble(0)),",
				"          female_niedersachsen = iif(endsWith(GroupName, '/Female'), toDouble(Niedersachsen), toDouble(0)),",
				"          female_nordrhein_westfalen = iif(endsWith(GroupName, '/Female'), toDouble({Nordrhein-Westfalen}), toDouble(0)),",
				"          female_rheinland_pfalz = iif(endsWith(GroupName, '/Female'), toDouble({Rheinland-Pfalz}), toDouble(0)),",
				"          female_saarland = iif(endsWith(GroupName, '/Female'), toDouble(Saarland), toDouble(0)),",
				"          female_sachsen = iif(endsWith(GroupName, '/Female'), toDouble(Sachsen), toDouble(0)),",
				"          female_sachsen_anhalt = iif(endsWith(GroupName, '/Female'), toDouble({Sachsen-Anhalt}), toDouble(0)),",
				"          female_schleswig_holstein = iif(endsWith(GroupName, '/Female'), toDouble({Schleswig-Holstein}), toDouble(0)),",
				"          female_thuringen = iif(endsWith(GroupName, '/Female'), toDouble({Thüringen}), toDouble(0))) ~> DeriveGenderColumns2",
				"SplitModelTypes2@ModelEngine derive(market = 'DE',",
				"          year = '2020',",
				"          model = replace(GroupName, '/', ' '),",
				"          total_baden_wurttemberg = toDouble({Baden-Württemberg}),",
				"          total_bayern = toDouble(Bayern),",
				"          total_berlin = toDouble(Berlin),",
				"          total_brandenburg = toDouble(Brandenburg),",
				"          total_bremen = toDouble(Bremen),",
				"          total_hamburg = toDouble(Hamburg),",
				"          total_hessen = toDouble(Hessen),",
				"          total_mecklenburg_vorpommern = toDouble({Mecklenburg-Vorpommern}),",
				"          total_niedersachsen = toDouble(Niedersachsen),",
				"          total_nordrhein_westfalen = toDouble({Nordrhein-Westfalen}),",
				"          total_rheinland_pfalz = toDouble({Rheinland-Pfalz}),",
				"          total_saarland = toDouble(Saarland),",
				"          total_sachsen = toDouble(Sachsen),",
				"          total_sachsen_anhalt = toDouble({Sachsen-Anhalt}),",
				"          total_schleswig_holstein = toDouble({Schleswig-Holstein}),",
				"          total_thuringen = toDouble({Thüringen})) ~> DeriveEngineColumns2",
				"source3 split(GroupType == 'Model/Gender',",
				"     GroupType == 'Model/Engine',",
				"     disjoint: false) ~> SplitModelTypes3@(ModelGender, ModelEngine)",
				"SplitModelTypes3@ModelGender derive(market = 'DE',",
				"          year = '2021',",
				"          model = iif(GroupName == 'Porsche/Female' || GroupName == 'Porsche/Male', 'All Models',",
				"        iif(locate('/', GroupName) > 0, ",
				"            concat(trim(split(GroupName, '/')[1]), ' All'),",
				"            GroupName",
				"        )",
				"    ),",
				"          male_baden_wurttemberg = iif(endsWith(GroupName, '/Male'), toDouble({Baden-Württemberg}), toDouble(0)),",
				"          male_bayern = iif(endsWith(GroupName, '/Male'), toDouble(Bayern), toDouble(0)),",
				"          male_berlin = iif(endsWith(GroupName, '/Male'), toDouble(Berlin), toDouble(0)),",
				"          male_brandenburg = iif(endsWith(GroupName, '/Male'), toDouble(Brandenburg), toDouble(0)),",
				"          male_bremen = iif(endsWith(GroupName, '/Male'), toDouble(Bremen), toDouble(0)),",
				"          male_hamburg = iif(endsWith(GroupName, '/Male'), toDouble(Hamburg), toDouble(0)),",
				"          male_hessen = iif(endsWith(GroupName, '/Male'), toDouble(Hessen), toDouble(0)),",
				"          male_mecklenburg_vorpommern = iif(endsWith(GroupName, '/Male'), toDouble({Mecklenburg-Vorpommern}), toDouble(0)),",
				"          male_niedersachsen = iif(endsWith(GroupName, '/Male'), toDouble(Niedersachsen), toDouble(0)),",
				"          male_nordrhein_westfalen = iif(endsWith(GroupName, '/Male'), toDouble({Nordrhein-Westfalen}), toDouble(0)),",
				"          male_rheinland_pfalz = iif(endsWith(GroupName, '/Male'), toDouble({Rheinland-Pfalz}), toDouble(0)),",
				"          male_saarland = iif(endsWith(GroupName, '/Male'), toDouble(Saarland), toDouble(0)),",
				"          male_sachsen = iif(endsWith(GroupName, '/Male'), toDouble(Sachsen), toDouble(0)),",
				"          male_sachsen_anhalt = iif(endsWith(GroupName, '/Male'), toDouble({Sachsen-Anhalt}), toDouble(0)),",
				"          male_schleswig_holstein = iif(endsWith(GroupName, '/Male'), toDouble({Schleswig-Holstein}), toDouble(0)),",
				"          male_thuringen = iif(endsWith(GroupName, '/Male'), toDouble({Thüringen}), toDouble(0)),",
				"          female_baden_wurttemberg = iif(endsWith(GroupName, '/Female'), toDouble({Baden-Württemberg}), toDouble(0)),",
				"          female_bayern = iif(endsWith(GroupName, '/Female'), toDouble(Bayern), toDouble(0)),",
				"          female_berlin = iif(endsWith(GroupName, '/Female'), toDouble(Berlin), toDouble(0)),",
				"          female_brandenburg = iif(endsWith(GroupName, '/Female'), toDouble(Brandenburg), toDouble(0)),",
				"          female_bremen = iif(endsWith(GroupName, '/Female'), toDouble(Bremen), toDouble(0)),",
				"          female_hamburg = iif(endsWith(GroupName, '/Female'), toDouble(Hamburg), toDouble(0)),",
				"          female_hessen = iif(endsWith(GroupName, '/Female'), toDouble(Hessen), toDouble(0)),",
				"          female_mecklenburg_vorpommern = iif(endsWith(GroupName, '/Female'), toDouble({Mecklenburg-Vorpommern}), toDouble(0)),",
				"          female_niedersachsen = iif(endsWith(GroupName, '/Female'), toDouble(Niedersachsen), toDouble(0)),",
				"          female_nordrhein_westfalen = iif(endsWith(GroupName, '/Female'), toDouble({Nordrhein-Westfalen}), toDouble(0)),",
				"          female_rheinland_pfalz = iif(endsWith(GroupName, '/Female'), toDouble({Rheinland-Pfalz}), toDouble(0)),",
				"          female_saarland = iif(endsWith(GroupName, '/Female'), toDouble(Saarland), toDouble(0)),",
				"          female_sachsen = iif(endsWith(GroupName, '/Female'), toDouble(Sachsen), toDouble(0)),",
				"          female_sachsen_anhalt = iif(endsWith(GroupName, '/Female'), toDouble({Sachsen-Anhalt}), toDouble(0)),",
				"          female_schleswig_holstein = iif(endsWith(GroupName, '/Female'), toDouble({Schleswig-Holstein}), toDouble(0)),",
				"          female_thuringen = iif(endsWith(GroupName, '/Female'), toDouble({Thüringen}), toDouble(0))) ~> DeriveGenderColumns3",
				"SplitModelTypes3@ModelEngine derive(market = 'DE',",
				"          year = '2021',",
				"          model = replace(GroupName, '/', ' '),",
				"          total_baden_wurttemberg = toDouble({Baden-Württemberg}),",
				"          total_bayern = toDouble(Bayern),",
				"          total_berlin = toDouble(Berlin),",
				"          total_brandenburg = toDouble(Brandenburg),",
				"          total_bremen = toDouble(Bremen),",
				"          total_hamburg = toDouble(Hamburg),",
				"          total_hessen = toDouble(Hessen),",
				"          total_mecklenburg_vorpommern = toDouble({Mecklenburg-Vorpommern}),",
				"          total_niedersachsen = toDouble(Niedersachsen),",
				"          total_nordrhein_westfalen = toDouble({Nordrhein-Westfalen}),",
				"          total_rheinland_pfalz = toDouble({Rheinland-Pfalz}),",
				"          total_saarland = toDouble(Saarland),",
				"          total_sachsen = toDouble(Sachsen),",
				"          total_sachsen_anhalt = toDouble({Sachsen-Anhalt}),",
				"          total_schleswig_holstein = toDouble({Schleswig-Holstein}),",
				"          total_thuringen = toDouble({Thüringen})) ~> DeriveEngineColumns3",
				"source4 split(GroupType == 'Model/Gender',",
				"     GroupType == 'Model/Engine',",
				"     disjoint: false) ~> SplitModelTypes4@(ModelGender, ModelEngine)",
				"SplitModelTypes4@ModelGender derive(market = 'DE',",
				"          year = '2022',",
				"          model = iif(GroupName == 'Porsche/Female' || GroupName == 'Porsche/Male', 'All Models',",
				"        iif(locate('/', GroupName) > 0, ",
				"            concat(trim(split(GroupName, '/')[1]), ' All'),",
				"            GroupName",
				"        )",
				"    ),",
				"          male_baden_wurttemberg = iif(endsWith(GroupName, '/Male'), toDouble({Baden-Württemberg}), toDouble(0)),",
				"          male_bayern = iif(endsWith(GroupName, '/Male'), toDouble(Bayern), toDouble(0)),",
				"          male_berlin = iif(endsWith(GroupName, '/Male'), toDouble(Berlin), toDouble(0)),",
				"          male_brandenburg = iif(endsWith(GroupName, '/Male'), toDouble(Brandenburg), toDouble(0)),",
				"          male_bremen = iif(endsWith(GroupName, '/Male'), toDouble(Bremen), toDouble(0)),",
				"          male_hamburg = iif(endsWith(GroupName, '/Male'), toDouble(Hamburg), toDouble(0)),",
				"          male_hessen = iif(endsWith(GroupName, '/Male'), toDouble(Hessen), toDouble(0)),",
				"          male_mecklenburg_vorpommern = iif(endsWith(GroupName, '/Male'), toDouble({Mecklenburg-Vorpommern}), toDouble(0)),",
				"          male_niedersachsen = iif(endsWith(GroupName, '/Male'), toDouble(Niedersachsen), toDouble(0)),",
				"          male_nordrhein_westfalen = iif(endsWith(GroupName, '/Male'), toDouble({Nordrhein-Westfalen}), toDouble(0)),",
				"          male_rheinland_pfalz = iif(endsWith(GroupName, '/Male'), toDouble({Rheinland-Pfalz}), toDouble(0)),",
				"          male_saarland = iif(endsWith(GroupName, '/Male'), toDouble(Saarland), toDouble(0)),",
				"          male_sachsen = iif(endsWith(GroupName, '/Male'), toDouble(Sachsen), toDouble(0)),",
				"          male_sachsen_anhalt = iif(endsWith(GroupName, '/Male'), toDouble({Sachsen-Anhalt}), toDouble(0)),",
				"          male_schleswig_holstein = iif(endsWith(GroupName, '/Male'), toDouble({Schleswig-Holstein}), toDouble(0)),",
				"          male_thuringen = iif(endsWith(GroupName, '/Male'), toDouble({Thüringen}), toDouble(0)),",
				"          female_baden_wurttemberg = iif(endsWith(GroupName, '/Female'), toDouble({Baden-Württemberg}), toDouble(0)),",
				"          female_bayern = iif(endsWith(GroupName, '/Female'), toDouble(Bayern), toDouble(0)),",
				"          female_berlin = iif(endsWith(GroupName, '/Female'), toDouble(Berlin), toDouble(0)),",
				"          female_brandenburg = iif(endsWith(GroupName, '/Female'), toDouble(Brandenburg), toDouble(0)),",
				"          female_bremen = iif(endsWith(GroupName, '/Female'), toDouble(Bremen), toDouble(0)),",
				"          female_hamburg = iif(endsWith(GroupName, '/Female'), toDouble(Hamburg), toDouble(0)),",
				"          female_hessen = iif(endsWith(GroupName, '/Female'), toDouble(Hessen), toDouble(0)),",
				"          female_mecklenburg_vorpommern = iif(endsWith(GroupName, '/Female'), toDouble({Mecklenburg-Vorpommern}), toDouble(0)),",
				"          female_niedersachsen = iif(endsWith(GroupName, '/Female'), toDouble(Niedersachsen), toDouble(0)),",
				"          female_nordrhein_westfalen = iif(endsWith(GroupName, '/Female'), toDouble({Nordrhein-Westfalen}), toDouble(0)),",
				"          female_rheinland_pfalz = iif(endsWith(GroupName, '/Female'), toDouble({Rheinland-Pfalz}), toDouble(0)),",
				"          female_saarland = iif(endsWith(GroupName, '/Female'), toDouble(Saarland), toDouble(0)),",
				"          female_sachsen = iif(endsWith(GroupName, '/Female'), toDouble(Sachsen), toDouble(0)),",
				"          female_sachsen_anhalt = iif(endsWith(GroupName, '/Female'), toDouble({Sachsen-Anhalt}), toDouble(0)),",
				"          female_schleswig_holstein = iif(endsWith(GroupName, '/Female'), toDouble({Schleswig-Holstein}), toDouble(0)),",
				"          female_thuringen = iif(endsWith(GroupName, '/Female'), toDouble({Thüringen}), toDouble(0))) ~> DeriveGenderColumns4",
				"SplitModelTypes4@ModelEngine derive(market = 'DE',",
				"          year = '2022',",
				"          model = replace(GroupName, '/', ' '),",
				"          total_baden_wurttemberg = toDouble({Baden-Württemberg}),",
				"          total_bayern = toDouble(Bayern),",
				"          total_berlin = toDouble(Berlin),",
				"          total_brandenburg = toDouble(Brandenburg),",
				"          total_bremen = toDouble(Bremen),",
				"          total_hamburg = toDouble(Hamburg),",
				"          total_hessen = toDouble(Hessen),",
				"          total_mecklenburg_vorpommern = toDouble({Mecklenburg-Vorpommern}),",
				"          total_niedersachsen = toDouble(Niedersachsen),",
				"          total_nordrhein_westfalen = toDouble({Nordrhein-Westfalen}),",
				"          total_rheinland_pfalz = toDouble({Rheinland-Pfalz}),",
				"          total_saarland = toDouble(Saarland),",
				"          total_sachsen = toDouble(Sachsen),",
				"          total_sachsen_anhalt = toDouble({Sachsen-Anhalt}),",
				"          total_schleswig_holstein = toDouble({Schleswig-Holstein}),",
				"          total_thuringen = toDouble({Thüringen})) ~> DeriveEngineColumns4",
				"source5 split(GroupType == 'Model/Gender',",
				"     GroupType == 'Model/Engine',",
				"     disjoint: false) ~> SplitModelTypes5@(ModelGender, ModelEngine)",
				"SplitModelTypes5@ModelGender derive(market = 'DE',",
				"          year = '2023',",
				"          model = iif(GroupName == 'Porsche/Female' || GroupName == 'Porsche/Male', 'All Models',",
				"        iif(locate('/', GroupName) > 0, ",
				"            concat(trim(split(GroupName, '/')[1]), ' All'),",
				"            GroupName",
				"        )",
				"    ),",
				"          male_baden_wurttemberg = iif(endsWith(GroupName, '/Male'), toDouble({Baden-Württemberg}), toDouble(0)),",
				"          male_bayern = iif(endsWith(GroupName, '/Male'), toDouble(Bayern), toDouble(0)),",
				"          male_berlin = iif(endsWith(GroupName, '/Male'), toDouble(Berlin), toDouble(0)),",
				"          male_brandenburg = iif(endsWith(GroupName, '/Male'), toDouble(Brandenburg), toDouble(0)),",
				"          male_bremen = iif(endsWith(GroupName, '/Male'), toDouble(Bremen), toDouble(0)),",
				"          male_hamburg = iif(endsWith(GroupName, '/Male'), toDouble(Hamburg), toDouble(0)),",
				"          male_hessen = iif(endsWith(GroupName, '/Male'), toDouble(Hessen), toDouble(0)),",
				"          male_mecklenburg_vorpommern = iif(endsWith(GroupName, '/Male'), toDouble({Mecklenburg-Vorpommern}), toDouble(0)),",
				"          male_niedersachsen = iif(endsWith(GroupName, '/Male'), toDouble(Niedersachsen), toDouble(0)),",
				"          male_nordrhein_westfalen = iif(endsWith(GroupName, '/Male'), toDouble({Nordrhein-Westfalen}), toDouble(0)),",
				"          male_rheinland_pfalz = iif(endsWith(GroupName, '/Male'), toDouble({Rheinland-Pfalz}), toDouble(0)),",
				"          male_saarland = iif(endsWith(GroupName, '/Male'), toDouble(Saarland), toDouble(0)),",
				"          male_sachsen = iif(endsWith(GroupName, '/Male'), toDouble(Sachsen), toDouble(0)),",
				"          male_sachsen_anhalt = iif(endsWith(GroupName, '/Male'), toDouble({Sachsen-Anhalt}), toDouble(0)),",
				"          male_schleswig_holstein = iif(endsWith(GroupName, '/Male'), toDouble({Schleswig-Holstein}), toDouble(0)),",
				"          male_thuringen = iif(endsWith(GroupName, '/Male'), toDouble({Thüringen}), toDouble(0)),",
				"          female_baden_wurttemberg = iif(endsWith(GroupName, '/Female'), toDouble({Baden-Württemberg}), toDouble(0)),",
				"          female_bayern = iif(endsWith(GroupName, '/Female'), toDouble(Bayern), toDouble(0)),",
				"          female_berlin = iif(endsWith(GroupName, '/Female'), toDouble(Berlin), toDouble(0)),",
				"          female_brandenburg = iif(endsWith(GroupName, '/Female'), toDouble(Brandenburg), toDouble(0)),",
				"          female_bremen = iif(endsWith(GroupName, '/Female'), toDouble(Bremen), toDouble(0)),",
				"          female_hamburg = iif(endsWith(GroupName, '/Female'), toDouble(Hamburg), toDouble(0)),",
				"          female_hessen = iif(endsWith(GroupName, '/Female'), toDouble(Hessen), toDouble(0)),",
				"          female_mecklenburg_vorpommern = iif(endsWith(GroupName, '/Female'), toDouble({Mecklenburg-Vorpommern}), toDouble(0)),",
				"          female_niedersachsen = iif(endsWith(GroupName, '/Female'), toDouble(Niedersachsen), toDouble(0)),",
				"          female_nordrhein_westfalen = iif(endsWith(GroupName, '/Female'), toDouble({Nordrhein-Westfalen}), toDouble(0)),",
				"          female_rheinland_pfalz = iif(endsWith(GroupName, '/Female'), toDouble({Rheinland-Pfalz}), toDouble(0)),",
				"          female_saarland = iif(endsWith(GroupName, '/Female'), toDouble(Saarland), toDouble(0)),",
				"          female_sachsen = iif(endsWith(GroupName, '/Female'), toDouble(Sachsen), toDouble(0)),",
				"          female_sachsen_anhalt = iif(endsWith(GroupName, '/Female'), toDouble({Sachsen-Anhalt}), toDouble(0)),",
				"          female_schleswig_holstein = iif(endsWith(GroupName, '/Female'), toDouble({Schleswig-Holstein}), toDouble(0)),",
				"          female_thuringen = iif(endsWith(GroupName, '/Female'), toDouble({Thüringen}), toDouble(0))) ~> DeriveGenderColumns5",
				"SplitModelTypes5@ModelEngine derive(market = 'DE',",
				"          year = '2023',",
				"          model = replace(GroupName, '/', ' '),",
				"          total_baden_wurttemberg = toDouble({Baden-Württemberg}),",
				"          total_bayern = toDouble(Bayern),",
				"          total_berlin = toDouble(Berlin),",
				"          total_brandenburg = toDouble(Brandenburg),",
				"          total_bremen = toDouble(Bremen),",
				"          total_hamburg = toDouble(Hamburg),",
				"          total_hessen = toDouble(Hessen),",
				"          total_mecklenburg_vorpommern = toDouble({Mecklenburg-Vorpommern}),",
				"          total_niedersachsen = toDouble(Niedersachsen),",
				"          total_nordrhein_westfalen = toDouble({Nordrhein-Westfalen}),",
				"          total_rheinland_pfalz = toDouble({Rheinland-Pfalz}),",
				"          total_saarland = toDouble(Saarland),",
				"          total_sachsen = toDouble(Sachsen),",
				"          total_sachsen_anhalt = toDouble({Sachsen-Anhalt}),",
				"          total_schleswig_holstein = toDouble({Schleswig-Holstein}),",
				"          total_thuringen = toDouble({Thüringen})) ~> DeriveEngineColumns5",
				"DeriveGenderColumns1 aggregate(groupBy(market,",
				"          year,",
				"          model),",
				"     male_baden_wurttemberg = max(male_baden_wurttemberg),",
				"          male_bayern = max(male_bayern),",
				"          male_berlin = max(male_berlin),",
				"          male_brandenburg = max(male_brandenburg),",
				"          male_bremen = max(male_bremen),",
				"          male_hamburg = max(male_hamburg),",
				"          male_hessen = max(male_hessen),",
				"          male_mecklenburg_vorpommern = max(male_mecklenburg_vorpommern),",
				"          male_niedersachsen = max(male_niedersachsen),",
				"          male_nordrhein_westfalen = max(male_nordrhein_westfalen),",
				"          male_rheinland_pfalz = max(male_rheinland_pfalz),",
				"          male_saarland = max(male_saarland),",
				"          male_sachsen = max(male_sachsen),",
				"          male_sachsen_anhalt = max(male_sachsen_anhalt),",
				"          male_schleswig_holstein = max(male_schleswig_holstein),",
				"          male_thuringen = max(male_thuringen),",
				"          female_baden_wurttemberg = max(female_baden_wurttemberg),",
				"          female_bayern = max(female_bayern),",
				"          female_berlin = max(female_berlin),",
				"          female_brandenburg = max(female_brandenburg),",
				"          female_bremen = max(female_bremen),",
				"          female_hamburg = max(female_hamburg),",
				"          female_hessen = max(female_hessen),",
				"          female_mecklenburg_vorpommern = max(female_mecklenburg_vorpommern),",
				"          female_niedersachsen = max(female_niedersachsen),",
				"          female_nordrhein_westfalen = max(female_nordrhein_westfalen),",
				"          female_rheinland_pfalz = max(female_rheinland_pfalz),",
				"          female_saarland = max(female_saarland),",
				"          female_sachsen = max(female_sachsen),",
				"          female_sachsen_anhalt = max(female_sachsen_anhalt),",
				"          female_schleswig_holstein = max(female_schleswig_holstein),",
				"          female_thuringen = max(female_thuringen),",
				"          total_baden_wurttemberg = (max(male_baden_wurttemberg) + max(female_baden_wurttemberg)) / 2,",
				"          total_bayern = (max(male_bayern) + max(female_bayern)) / 2,",
				"          total_berlin = (max(male_berlin) + max(female_berlin)) / 2,",
				"          total_brandenburg = (max(male_brandenburg) + max(female_brandenburg)) / 2,",
				"          total_bremen = (max(male_bremen) + max(female_bremen)) / 2,",
				"          total_hamburg = (max(male_hamburg) + max(female_hamburg)) / 2,",
				"          total_hessen = (max(male_hessen) + max(female_hessen)) / 2,",
				"          total_mecklenburg_vorpommern = (max(male_mecklenburg_vorpommern) + max(female_mecklenburg_vorpommern)) / 2,",
				"          total_niedersachsen = (max(male_niedersachsen) + max(female_niedersachsen)) / 2,",
				"          total_nordrhein_westfalen = (max(male_nordrhein_westfalen) + max(female_nordrhein_westfalen)) / 2,",
				"          total_rheinland_pfalz = (max(male_rheinland_pfalz) + max(female_rheinland_pfalz)) / 2,",
				"          total_saarland = (max(male_saarland) + max(female_saarland)) / 2,",
				"          total_sachsen = (max(male_sachsen) + max(female_sachsen)) / 2,",
				"          total_sachsen_anhalt = (max(male_sachsen_anhalt) + max(female_sachsen_anhalt)) / 2,",
				"          total_schleswig_holstein = (max(male_schleswig_holstein) + max(female_schleswig_holstein)) / 2,",
				"          total_thuringen = (max(male_thuringen) + max(female_thuringen)) / 2) ~> AggregateGenderData1",
				"DeriveGenderColumns2 aggregate(groupBy(market,",
				"          year,",
				"          model),",
				"     male_baden_wurttemberg = max(male_baden_wurttemberg),",
				"          male_bayern = max(male_bayern),",
				"          male_berlin = max(male_berlin),",
				"          male_brandenburg = max(male_brandenburg),",
				"          male_bremen = max(male_bremen),",
				"          male_hamburg = max(male_hamburg),",
				"          male_hessen = max(male_hessen),",
				"          male_mecklenburg_vorpommern = max(male_mecklenburg_vorpommern),",
				"          male_niedersachsen = max(male_niedersachsen),",
				"          male_nordrhein_westfalen = max(male_nordrhein_westfalen),",
				"          male_rheinland_pfalz = max(male_rheinland_pfalz),",
				"          male_saarland = max(male_saarland),",
				"          male_sachsen = max(male_sachsen),",
				"          male_sachsen_anhalt = max(male_sachsen_anhalt),",
				"          male_schleswig_holstein = max(male_schleswig_holstein),",
				"          male_thuringen = max(male_thuringen),",
				"          female_baden_wurttemberg = max(female_baden_wurttemberg),",
				"          female_bayern = max(female_bayern),",
				"          female_berlin = max(female_berlin),",
				"          female_brandenburg = max(female_brandenburg),",
				"          female_bremen = max(female_bremen),",
				"          female_hamburg = max(female_hamburg),",
				"          female_hessen = max(female_hessen),",
				"          female_mecklenburg_vorpommern = max(female_mecklenburg_vorpommern),",
				"          female_niedersachsen = max(female_niedersachsen),",
				"          female_nordrhein_westfalen = max(female_nordrhein_westfalen),",
				"          female_rheinland_pfalz = max(female_rheinland_pfalz),",
				"          female_saarland = max(female_saarland),",
				"          female_sachsen = max(female_sachsen),",
				"          female_sachsen_anhalt = max(female_sachsen_anhalt),",
				"          female_schleswig_holstein = max(female_schleswig_holstein),",
				"          female_thuringen = max(female_thuringen),",
				"          total_baden_wurttemberg = (max(male_baden_wurttemberg) + max(female_baden_wurttemberg)) / 2,",
				"          total_bayern = (max(male_bayern) + max(female_bayern)) / 2,",
				"          total_berlin = (max(male_berlin) + max(female_berlin)) / 2,",
				"          total_brandenburg = (max(male_brandenburg) + max(female_brandenburg)) / 2,",
				"          total_bremen = (max(male_bremen) + max(female_bremen)) / 2,",
				"          total_hamburg = (max(male_hamburg) + max(female_hamburg)) / 2,",
				"          total_hessen = (max(male_hessen) + max(female_hessen)) / 2,",
				"          total_mecklenburg_vorpommern = (max(male_mecklenburg_vorpommern) + max(female_mecklenburg_vorpommern)) / 2,",
				"          total_niedersachsen = (max(male_niedersachsen) + max(female_niedersachsen)) / 2,",
				"          total_nordrhein_westfalen = (max(male_nordrhein_westfalen) + max(female_nordrhein_westfalen)) / 2,",
				"          total_rheinland_pfalz = (max(male_rheinland_pfalz) + max(female_rheinland_pfalz)) / 2,",
				"          total_saarland = (max(male_saarland) + max(female_saarland)) / 2,",
				"          total_sachsen = (max(male_sachsen) + max(female_sachsen)) / 2,",
				"          total_sachsen_anhalt = (max(male_sachsen_anhalt) + max(female_sachsen_anhalt)) / 2,",
				"          total_schleswig_holstein = (max(male_schleswig_holstein) + max(female_schleswig_holstein)) / 2,",
				"          total_thuringen = (max(male_thuringen) + max(female_thuringen)) / 2) ~> AggregateGenderData2",
				"DeriveGenderColumns3 aggregate(groupBy(market,",
				"          year,",
				"          model),",
				"     male_baden_wurttemberg = max(male_baden_wurttemberg),",
				"          male_bayern = max(male_bayern),",
				"          male_berlin = max(male_berlin),",
				"          male_brandenburg = max(male_brandenburg),",
				"          male_bremen = max(male_bremen),",
				"          male_hamburg = max(male_hamburg),",
				"          male_hessen = max(male_hessen),",
				"          male_mecklenburg_vorpommern = max(male_mecklenburg_vorpommern),",
				"          male_niedersachsen = max(male_niedersachsen),",
				"          male_nordrhein_westfalen = max(male_nordrhein_westfalen),",
				"          male_rheinland_pfalz = max(male_rheinland_pfalz),",
				"          male_saarland = max(male_saarland),",
				"          male_sachsen = max(male_sachsen),",
				"          male_sachsen_anhalt = max(male_sachsen_anhalt),",
				"          male_schleswig_holstein = max(male_schleswig_holstein),",
				"          male_thuringen = max(male_thuringen),",
				"          female_baden_wurttemberg = max(female_baden_wurttemberg),",
				"          female_bayern = max(female_bayern),",
				"          female_berlin = max(female_berlin),",
				"          female_brandenburg = max(female_brandenburg),",
				"          female_bremen = max(female_bremen),",
				"          female_hamburg = max(female_hamburg),",
				"          female_hessen = max(female_hessen),",
				"          female_mecklenburg_vorpommern = max(female_mecklenburg_vorpommern),",
				"          female_niedersachsen = max(female_niedersachsen),",
				"          female_nordrhein_westfalen = max(female_nordrhein_westfalen),",
				"          female_rheinland_pfalz = max(female_rheinland_pfalz),",
				"          female_saarland = max(female_saarland),",
				"          female_sachsen = max(female_sachsen),",
				"          female_sachsen_anhalt = max(female_sachsen_anhalt),",
				"          female_schleswig_holstein = max(female_schleswig_holstein),",
				"          female_thuringen = max(female_thuringen),",
				"          total_baden_wurttemberg = (max(male_baden_wurttemberg) + max(female_baden_wurttemberg)) / 2,",
				"          total_bayern = (max(male_bayern) + max(female_bayern)) / 2,",
				"          total_berlin = (max(male_berlin) + max(female_berlin)) / 2,",
				"          total_brandenburg = (max(male_brandenburg) + max(female_brandenburg)) / 2,",
				"          total_bremen = (max(male_bremen) + max(female_bremen)) / 2,",
				"          total_hamburg = (max(male_hamburg) + max(female_hamburg)) / 2,",
				"          total_hessen = (max(male_hessen) + max(female_hessen)) / 2,",
				"          total_mecklenburg_vorpommern = (max(male_mecklenburg_vorpommern) + max(female_mecklenburg_vorpommern)) / 2,",
				"          total_niedersachsen = (max(male_niedersachsen) + max(female_niedersachsen)) / 2,",
				"          total_nordrhein_westfalen = (max(male_nordrhein_westfalen) + max(female_nordrhein_westfalen)) / 2,",
				"          total_rheinland_pfalz = (max(male_rheinland_pfalz) + max(female_rheinland_pfalz)) / 2,",
				"          total_saarland = (max(male_saarland) + max(female_saarland)) / 2,",
				"          total_sachsen = (max(male_sachsen) + max(female_sachsen)) / 2,",
				"          total_sachsen_anhalt = (max(male_sachsen_anhalt) + max(female_sachsen_anhalt)) / 2,",
				"          total_schleswig_holstein = (max(male_schleswig_holstein) + max(female_schleswig_holstein)) / 2,",
				"          total_thuringen = (max(male_thuringen) + max(female_thuringen)) / 2) ~> AggregateGenderData3",
				"DeriveGenderColumns4 aggregate(groupBy(market,",
				"          year,",
				"          model),",
				"     male_baden_wurttemberg = max(male_baden_wurttemberg),",
				"          male_bayern = max(male_bayern),",
				"          male_berlin = max(male_berlin),",
				"          male_brandenburg = max(male_brandenburg),",
				"          male_bremen = max(male_bremen),",
				"          male_hamburg = max(male_hamburg),",
				"          male_hessen = max(male_hessen),",
				"          male_mecklenburg_vorpommern = max(male_mecklenburg_vorpommern),",
				"          male_niedersachsen = max(male_niedersachsen),",
				"          male_nordrhein_westfalen = max(male_nordrhein_westfalen),",
				"          male_rheinland_pfalz = max(male_rheinland_pfalz),",
				"          male_saarland = max(male_saarland),",
				"          male_sachsen = max(male_sachsen),",
				"          male_sachsen_anhalt = max(male_sachsen_anhalt),",
				"          male_schleswig_holstein = max(male_schleswig_holstein),",
				"          male_thuringen = max(male_thuringen),",
				"          female_baden_wurttemberg = max(female_baden_wurttemberg),",
				"          female_bayern = max(female_bayern),",
				"          female_berlin = max(female_berlin),",
				"          female_brandenburg = max(female_brandenburg),",
				"          female_bremen = max(female_bremen),",
				"          female_hamburg = max(female_hamburg),",
				"          female_hessen = max(female_hessen),",
				"          female_mecklenburg_vorpommern = max(female_mecklenburg_vorpommern),",
				"          female_niedersachsen = max(female_niedersachsen),",
				"          female_nordrhein_westfalen = max(female_nordrhein_westfalen),",
				"          female_rheinland_pfalz = max(female_rheinland_pfalz),",
				"          female_saarland = max(female_saarland),",
				"          female_sachsen = max(female_sachsen),",
				"          female_sachsen_anhalt = max(female_sachsen_anhalt),",
				"          female_schleswig_holstein = max(female_schleswig_holstein),",
				"          female_thuringen = max(female_thuringen),",
				"          total_baden_wurttemberg = (max(male_baden_wurttemberg) + max(female_baden_wurttemberg)) / 2,",
				"          total_bayern = (max(male_bayern) + max(female_bayern)) / 2,",
				"          total_berlin = (max(male_berlin) + max(female_berlin)) / 2,",
				"          total_brandenburg = (max(male_brandenburg) + max(female_brandenburg)) / 2,",
				"          total_bremen = (max(male_bremen) + max(female_bremen)) / 2,",
				"          total_hamburg = (max(male_hamburg) + max(female_hamburg)) / 2,",
				"          total_hessen = (max(male_hessen) + max(female_hessen)) / 2,",
				"          total_mecklenburg_vorpommern = (max(male_mecklenburg_vorpommern) + max(female_mecklenburg_vorpommern)) / 2,",
				"          total_niedersachsen = (max(male_niedersachsen) + max(female_niedersachsen)) / 2,",
				"          total_nordrhein_westfalen = (max(male_nordrhein_westfalen) + max(female_nordrhein_westfalen)) / 2,",
				"          total_rheinland_pfalz = (max(male_rheinland_pfalz) + max(female_rheinland_pfalz)) / 2,",
				"          total_saarland = (max(male_saarland) + max(female_saarland)) / 2,",
				"          total_sachsen = (max(male_sachsen) + max(female_sachsen)) / 2,",
				"          total_sachsen_anhalt = (max(male_sachsen_anhalt) + max(female_sachsen_anhalt)) / 2,",
				"          total_schleswig_holstein = (max(male_schleswig_holstein) + max(female_schleswig_holstein)) / 2,",
				"          total_thuringen = (max(male_thuringen) + max(female_thuringen)) / 2) ~> AggregateGenderData4",
				"DeriveGenderColumns5 aggregate(groupBy(market,",
				"          year,",
				"          model),",
				"     male_baden_wurttemberg = max(male_baden_wurttemberg),",
				"          male_bayern = max(male_bayern),",
				"          male_berlin = max(male_berlin),",
				"          male_brandenburg = max(male_brandenburg),",
				"          male_bremen = max(male_bremen),",
				"          male_hamburg = max(male_hamburg),",
				"          male_hessen = max(male_hessen),",
				"          male_mecklenburg_vorpommern = max(male_mecklenburg_vorpommern),",
				"          male_niedersachsen = max(male_niedersachsen),",
				"          male_nordrhein_westfalen = max(male_nordrhein_westfalen),",
				"          male_rheinland_pfalz = max(male_rheinland_pfalz),",
				"          male_saarland = max(male_saarland),",
				"          male_sachsen = max(male_sachsen),",
				"          male_sachsen_anhalt = max(male_sachsen_anhalt),",
				"          male_schleswig_holstein = max(male_schleswig_holstein),",
				"          male_thuringen = max(male_thuringen),",
				"          female_baden_wurttemberg = max(female_baden_wurttemberg),",
				"          female_bayern = max(female_bayern),",
				"          female_berlin = max(female_berlin),",
				"          female_brandenburg = max(female_brandenburg),",
				"          female_bremen = max(female_bremen),",
				"          female_hamburg = max(female_hamburg),",
				"          female_hessen = max(female_hessen),",
				"          female_mecklenburg_vorpommern = max(female_mecklenburg_vorpommern),",
				"          female_niedersachsen = max(female_niedersachsen),",
				"          female_nordrhein_westfalen = max(female_nordrhein_westfalen),",
				"          female_rheinland_pfalz = max(female_rheinland_pfalz),",
				"          female_saarland = max(female_saarland),",
				"          female_sachsen = max(female_sachsen),",
				"          female_sachsen_anhalt = max(female_sachsen_anhalt),",
				"          female_schleswig_holstein = max(female_schleswig_holstein),",
				"          female_thuringen = max(female_thuringen),",
				"          total_baden_wurttemberg = (max(male_baden_wurttemberg) + max(female_baden_wurttemberg)) / 2,",
				"          total_bayern = (max(male_bayern) + max(female_bayern)) / 2,",
				"          total_berlin = (max(male_berlin) + max(female_berlin)) / 2,",
				"          total_brandenburg = (max(male_brandenburg) + max(female_brandenburg)) / 2,",
				"          total_bremen = (max(male_bremen) + max(female_bremen)) / 2,",
				"          total_hamburg = (max(male_hamburg) + max(female_hamburg)) / 2,",
				"          total_hessen = (max(male_hessen) + max(female_hessen)) / 2,",
				"          total_mecklenburg_vorpommern = (max(male_mecklenburg_vorpommern) + max(female_mecklenburg_vorpommern)) / 2,",
				"          total_niedersachsen = (max(male_niedersachsen) + max(female_niedersachsen)) / 2,",
				"          total_nordrhein_westfalen = (max(male_nordrhein_westfalen) + max(female_nordrhein_westfalen)) / 2,",
				"          total_rheinland_pfalz = (max(male_rheinland_pfalz) + max(female_rheinland_pfalz)) / 2,",
				"          total_saarland = (max(male_saarland) + max(female_saarland)) / 2,",
				"          total_sachsen = (max(male_sachsen) + max(female_sachsen)) / 2,",
				"          total_sachsen_anhalt = (max(male_sachsen_anhalt) + max(female_sachsen_anhalt)) / 2,",
				"          total_schleswig_holstein = (max(male_schleswig_holstein) + max(female_schleswig_holstein)) / 2,",
				"          total_thuringen = (max(male_thuringen) + max(female_thuringen)) / 2) ~> AggregateGenderData5",
				"AggregateGenderData1, DeriveEngineColumns1, AggregateGenderData2, DeriveEngineColumns2, AggregateGenderData3, DeriveEngineColumns3, AggregateGenderData4, DeriveEngineColumns4, AggregateGenderData5, DeriveEngineColumns5 union(byName: true)~> UnionAllData",
				"UnionAllData derive(data = @(",
				"    market,",
				"    year,",
				"    model,",
				"    male_baden_wurttemberg,",
				"    male_bayern,",
				"    male_berlin,",
				"    male_brandenburg,",
				"    male_bremen,",
				"    male_hamburg,",
				"    male_hessen,",
				"    male_mecklenburg_vorpommern,",
				"    male_niedersachsen,",
				"    male_nordrhein_westfalen,",
				"    male_rheinland_pfalz,",
				"    male_saarland,",
				"    male_sachsen,",
				"    male_sachsen_anhalt,",
				"    male_schleswig_holstein,",
				"    male_thuringen,",
				"    female_baden_wurttemberg,",
				"    female_bayern,",
				"    female_berlin,",
				"    female_brandenburg,",
				"    female_bremen,",
				"    female_hamburg,",
				"    female_hessen,",
				"    female_mecklenburg_vorpommern,",
				"    female_niedersachsen,",
				"    female_nordrhein_westfalen,",
				"    female_rheinland_pfalz,",
				"    female_saarland,",
				"    female_sachsen,",
				"    female_sachsen_anhalt,",
				"    female_schleswig_holstein,",
				"    female_thuringen,",
				"    total_baden_wurttemberg,",
				"    total_bayern,",
				"    total_berlin,",
				"    total_brandenburg,",
				"    total_bremen,",
				"    total_hamburg,",
				"    total_hessen,",
				"    total_mecklenburg_vorpommern,",
				"    total_niedersachsen,",
				"    total_nordrhein_westfalen,",
				"    total_rheinland_pfalz,",
				"    total_saarland,",
				"    total_sachsen,",
				"    total_sachsen_anhalt,",
				"    total_schleswig_holstein,",
				"    total_thuringen",
				")) ~> CreateDataArray",
				"CreateDataArray aggregate(groupBy(dummy = 1),",
				"     data = collect(data)) ~> AggregateToArray",
				"AggregateToArray select(mapColumn(",
				"          data",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectDataArray",
				"SelectDataArray sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'json',",
				"     fileSystem: 'output',",
				"     partitionFileNames:['administrativeUnitDE.json'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}