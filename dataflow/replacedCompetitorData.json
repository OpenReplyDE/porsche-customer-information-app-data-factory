{
	"name": "replacedCompetitorData",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Full_data",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "RenameColumns"
				},
				{
					"name": "ExtractModelInfo"
				},
				{
					"name": "FilterValidData"
				},
				{
					"name": "DeriveGender"
				},
				{
					"name": "AggregateData"
				},
				{
					"name": "MapMarkets"
				},
				{
					"name": "SelectFinalColumns"
				},
				{
					"name": "CollectIntoArray"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ResponseId as string,",
				"          EndDate as string,",
				"          ED_MODEL_CODE as string,",
				"          ED_MODEL_YEAR as string,",
				"          {1711-1712} as string,",
				"          Q4601 as string,",
				"          Q4531 as string,",
				"          Q4609 as string,",
				"          Q5386 as string,",
				"          Q2002 as string,",
				"          Q2012 as string,",
				"          {1701} as string,",
				"          {1721} as string,",
				"          {1731-1732} as string,",
				"          V1021 as string,",
				"          {1950} as string,",
				"          {670} as string,",
				"          {671g_1_1_1} as string,",
				"          {671g_1_1_3} as string,",
				"          {671g_1_1_5} as string,",
				"          {711} as string,",
				"          {713g_1_1} as string,",
				"          {713g_1_3} as string,",
				"          {713g_1_5} as string,",
				"          {1961g_1_1_1} as string,",
				"          {1961g_1_1_3} as string,",
				"          {1961g_1_1_5} as string,",
				"          {3931g_3931} as string,",
				"          {3931g_3932} as string,",
				"          {3931g_3933} as string,",
				"          {3931g_3934} as string,",
				"          {3931g_3935} as string,",
				"          {3931g_3936} as string,",
				"          {3931g_3937} as string,",
				"          {3931g_3938} as string,",
				"          {3931g_3939} as string,",
				"          {3931g_3940} as string,",
				"          {3931g_3941} as string,",
				"          {1961g_2_1_1} as string,",
				"          {1961g_3_1_1} as string,",
				"          ED_AUTH_GROUP as string,",
				"          {3881g_38813883} as string,",
				"          {2674-2675} as string,",
				"          {1909-1910} as string,",
				"          Market as string,",
				"          Description as string,",
				"          Type as string,",
				"          Model_Row as string,",
				"          Derivate as string,",
				"          NBOSegment as string,",
				"          Drive as string,",
				"          Body as string,",
				"          PerformanceLevel as string,",
				"          TypeSOP as string,",
				"          TypeEOP as string,",
				"          Top as string,",
				"          Classic as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          ResponseId,",
				"          EndDate,",
				"          Q1701 = {1701},",
				"          Q713g_1_1 = {713g_1_1},",
				"          Market",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RenameColumns",
				"RenameColumns derive(Year = left(EndDate, 4),",
				"          Key = trim(split(Q713g_1_1, '-')[1]),",
				"          Variant = iif(size(split(Q713g_1_1, '-')) > 1, ",
				"                   trim(split(Q713g_1_1, '-')[2]), ",
				"                   'Basic'),",
				"          Model = '') ~> ExtractModelInfo",
				"ExtractModelInfo filter(!isNull(Key) && ",
				"    !isNull(Year) && ",
				"    !isNull(Market) &&",
				"    !isNull(Q1701)) ~> FilterValidData",
				"FilterValidData derive(Gender = case(",
				"        Q1701 == '1', 'male',",
				"        Q1701 == '2', 'female',",
				"        'unknown'",
				"    )) ~> DeriveGender",
				"DeriveGender aggregate(groupBy(Market,",
				"          Year,",
				"          Key,",
				"          Variant,",
				"          Model),",
				"     male = countIf(Gender == 'male'),",
				"          female = countIf(Gender == 'female')) ~> AggregateData",
				"AggregateData derive(MappedMarket = case(",
				"        Market == 'PGCN', 'CN',",
				"        Market == 'PCGB', 'UK',",
				"        Market == 'PCNA', 'US',",
				"        Market == 'PD', 'DE',",
				"        Market",
				"    )) ~> MapMarkets",
				"MapMarkets select(mapColumn(",
				"          market = MappedMarket,",
				"          year = Year,",
				"          key = Key,",
				"          female,",
				"          male,",
				"          variant = Variant,",
				"          model = Model",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> SelectFinalColumns",
				"SelectFinalColumns aggregate(data = collect(@(",
				"        market,",
				"        year,",
				"        key,",
				"        female,",
				"        male,",
				"        variant,",
				"        model",
				"    ))) ~> CollectIntoArray",
				"CollectIntoArray sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'json',",
				"     fileSystem: 'output',",
				"     partitionFileNames:['replacedCompetitorModelChart.json'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}