{
	"name": "hobbiesData",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "FullData",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "SelectRelevantColumns"
				},
				{
					"name": "DeriveBasicColumns"
				},
				{
					"name": "AdjustBaseModel"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ResponseId as string,",
				"          EndDate as string,",
				"          ED_MODEL_CODE as string,",
				"          ED_MODEL_YEAR as string,",
				"          {1711-1712} as string,",
				"          Q4601 as integer,",
				"          Q4531 as string,",
				"          Q4609 as integer,",
				"          Q5386 as string,",
				"          Q2002 as integer,",
				"          Q2012 as string,",
				"          {2051g_1001} as integer,",
				"          {2051g_301} as integer,",
				"          {2051g_302} as integer,",
				"          {2051g_101} as integer,",
				"          {2063} as integer,",
				"          {2051g_901} as integer,",
				"          {2051g_902} as integer,",
				"          {2051g_406} as integer,",
				"          {2051g_303} as integer,",
				"          {2051g_602} as integer,",
				"          {2072} as integer,",
				"          {2075} as integer,",
				"          {2051g_903} as integer,",
				"          {2051g_904} as integer,",
				"          {2051g_501} as integer,",
				"          {2051g_415} as integer,",
				"          {2082} as integer,",
				"          {2083} as integer,",
				"          {2084} as integer,",
				"          {2090} as integer,",
				"          {2092} as integer,",
				"          {2093} as integer,",
				"          {2096} as integer,",
				"          {2051g_1003} as integer,",
				"          {2051g_503} as integer,",
				"          {2102} as integer,",
				"          {2051g_1004} as integer,",
				"          {2110} as integer,",
				"          {2111} as integer,",
				"          {2114} as integer,",
				"          {2115} as integer,",
				"          {2051g_413} as integer,",
				"          {2117} as integer,",
				"          {2051g_414} as integer,",
				"          {2119} as integer,",
				"          {2051g_309} as integer,",
				"          {2122} as integer,",
				"          {2124} as integer,",
				"          {2051g_611} as integer,",
				"          {2128} as integer,",
				"          {2129} as integer,",
				"          {2051g_419} as integer,",
				"          {2051g_1006} as integer,",
				"          {2051g_804} as integer,",
				"          {2051g_805} as integer,",
				"          {2051g_803} as integer,",
				"          {2136} as integer,",
				"          {2138} as integer,",
				"          {2141} as integer,",
				"          {2142} as integer,",
				"          {2051g_703} as integer,",
				"          {2051g_1002} as integer,",
				"          {2145} as integer,",
				"          {2146} as integer,",
				"          {2147} as integer,",
				"          {2154} as integer,",
				"          {2051g_403} as integer,",
				"          {2051g_404} as integer,",
				"          {2051g_102} as integer,",
				"          {2051g_103} as integer,",
				"          {2051g_304} as integer,",
				"          {2053} as integer,",
				"          {2135} as integer,",
				"          {2080} as integer,",
				"          {2087} as integer,",
				"          {2088} as integer,",
				"          {2091} as integer,",
				"          {2100} as integer,",
				"          {2101} as integer,",
				"          {2104} as integer,",
				"          {2105} as integer,",
				"          {2106} as integer,",
				"          {2051g_502} as integer,",
				"          {2120} as integer,",
				"          {2051g_310} as integer,",
				"          {2054} as integer,",
				"          {2051g_504} as integer,",
				"          {2051g_416} as integer,",
				"          {2051g_417} as integer,",
				"          Market as string,",
				"          Description as string,",
				"          Type as string,",
				"          Model_Row as string,",
				"          Derivate as string,",
				"          NBOSegment as string,",
				"          Drive as string,",
				"          Body as string,",
				"          PerformanceLevel as string,",
				"          TypeSOP as string,",
				"          TypeEOP as string,",
				"          Top as string,",
				"          Classic as string,",
				"          {1701} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          ResponseId,",
				"          EndDate,",
				"          ED_MODEL_CODE,",
				"          ED_MODEL_YEAR,",
				"          Market,",
				"          Description,",
				"          Type,",
				"          Model_Row,",
				"          Derivate,",
				"          NBOSegment,",
				"          Drive,",
				"          Body,",
				"          PerformanceLevel,",
				"          TypeSOP,",
				"          TypeEOP,",
				"          Top,",
				"          Classic,",
				"          Gender = {1701},",
				"          {2051g_1001},",
				"          {2051g_301},",
				"          {2051g_302},",
				"          {2051g_101},",
				"          {2063},",
				"          {2051g_901},",
				"          {2051g_902},",
				"          {2051g_406},",
				"          {2051g_303},",
				"          {2051g_602},",
				"          {2072},",
				"          {2075},",
				"          {2051g_903},",
				"          {2051g_904},",
				"          {2051g_501},",
				"          {2051g_415},",
				"          {2082},",
				"          {2083},",
				"          {2084},",
				"          {2090},",
				"          {2092},",
				"          {2093},",
				"          {2096},",
				"          {2051g_1003},",
				"          {2051g_503},",
				"          {2102},",
				"          {2051g_1004},",
				"          {2110},",
				"          {2111},",
				"          {2114},",
				"          {2115},",
				"          {2051g_413},",
				"          {2117},",
				"          {2051g_414},",
				"          {2119},",
				"          {2051g_309},",
				"          {2122},",
				"          {2124},",
				"          {2051g_611},",
				"          {2128},",
				"          {2129},",
				"          {2051g_419},",
				"          {2051g_1006},",
				"          {2051g_804},",
				"          {2051g_805},",
				"          {2051g_803},",
				"          {2136},",
				"          {2138},",
				"          {2141},",
				"          {2142},",
				"          {2051g_703},",
				"          {2051g_1002},",
				"          {2145},",
				"          {2146},",
				"          {2147},",
				"          {2154},",
				"          {2051g_403},",
				"          {2051g_404},",
				"          {2051g_102},",
				"          {2051g_103},",
				"          {2051g_304},",
				"          {2053},",
				"          {2135},",
				"          {2080},",
				"          {2087},",
				"          {2088},",
				"          {2091},",
				"          {2100},",
				"          {2101},",
				"          {2104},",
				"          {2105},",
				"          {2106},",
				"          {2051g_502},",
				"          {2120},",
				"          {2051g_310},",
				"          {2054},",
				"          {2051g_504},",
				"          {2051g_416},",
				"          {2051g_417}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectRelevantColumns",
				"SelectRelevantColumns derive(Year = toString(year(toDate(EndDate, 'yyyy-MM-dd'))),",
				"          BaseModel = trim(split(Model_Row, ' ')[1]),",
				"          Variant = iif(isNull(Derivate) || Derivate == '' || Derivate == Model_Row, 'Basic', ",
				"           replace(Derivate, trim(split(Model_Row, ' ')[1]) + ' ', '')),",
				"          MappedMarket = case(",
				"      Market == 'PGCN', 'CN',",
				"      Market == 'PCGB', 'UK',",
				"      Market == 'PCNA', 'US',",
				"      Market",
				"    )) ~> DeriveBasicColumns",
				"DeriveBasicColumns derive(BaseModel = iif(regexMatch(BaseModel, '^[0-9]+$'), '_' + BaseModel, BaseModel)) ~> AdjustBaseModel"
			]
		}
	}
}